{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getCurrentAccount","currentAccount","session","get","getCurrentAccountNS","account","instanceURL","saveAccount","acc","vapidKey","push","setJSON","set","updateAccount","accountInfo","displayName","avatar","avatar_static","currentInstance","getCurrentInstance","instances","instance","toLowerCase","e","console","key","localStorage","getItem","JSON","value","warn","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","window","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","url","client","createClient","disableVersionCheck","timeout","__instance__","initInstance","masto","v2","fetch","v1","uri","urls","streamingApi","domain","configuration","streaming","mastoAccount","initAccount","preferences","initPreferences","api","accountID","_a","authenticated","_b","states","proxy","appVersion","prevLocation","currentLocation","statuses","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","spoilers","scrollPositions","unfurledLinks","statusQuotes","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","cloakMode","initStates","subscribeKey","v","subscribe","changes","prevValue","path","hideAllModals","statusKey","getStatus","statusID","saveStatus","status","opts","skipThreading","override","Object","oldStatus","_pinned","_filtered","threadifyStatus","requestAnimationFrame","propInstance","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","Promise","setTimeout","mem","emojifyText","text","emojis","length","indexOf","forEach","emoji","shortcode","staticUrl","RegExp","fauxDiv","document","createElement","enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","Array","from","querySelectorAll","link","setAttribute","textContent","trim","classList","add","links","usernames","innerText","hasChildren","querySelector","_","username","split","u","d","slice","textNodes","extractTextNodes","node","html","nodeValue","nodes","childNodes","replaceWith","filter","p","block","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","map","join","remove","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","i","nodeType","Node","TEXT_NODE","linkText","startsWith","title","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","parentNode","includes","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","handleContentLinks","mentions","previewMode","target","closest","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","acct","preventDefault","stopPropagation","href","textBeforeLinkIsHash","tag","hashURL","location","locale","Intl","DateTimeFormat","resolvedOptions","niceDateTime","date","hideTime","formatOpts","Date","currentYear","getFullYear","year","undefined","month","day","hour","minute","format","NumberFormat","shortenNumber","notation","showToast","props","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","SIZES","s","m","l","xl","xxl","xxxl","alphaCache","canvas","OffscreenCanvas","ctx","getContext","Avatar","size","alt","squircle","avatarRef","useRef","isMissing","_jsx","ref","class","style","width","height","children","src","loading","decoding","crossOrigin","onError","onLoad","current","dataset","loaded","drawImage","allPixels","getImageData","hasAlpha","pixel","clearRect","EmojiText","regex","elements","word","_jsxs","srcset","media","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","chevron-left","chevron-right","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","history","share","sparkles","exit","translate","play","trash","mute","unmute","unblock","flag","time","refresh","emoji2","chart","react","layout4","layout5","announce","alert","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","Icon","icon","iconSize","iconBlock","rotate","flip","isArray","iconData","setIconData","useState","useEffect","default","display","overflow","lineHeight","viewBox","dangerouslySetInnerHTML","__html","body","transform","AccountBlock","skeleton","avatarSize","internal","showActivity","showStats","accountInstance","hideDisplayName","avatarStatic","statusesCount","lastStatusAt","fields","note","acct1","acct2","match","verifiedField","f","verifiedAt","hash","_Fragment","Link","forwardRef","routerLocation","useLocation","to","restProps","isActive","decodeURIComponent","supportsCache","supports","feature","version","range","features","satisfies","includePrerelease","loose","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","Menu","menuRef","instanceRef","openTrigger","direction","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","Loader","abrupt","hidden","$modalContainer","getElementById","Modal","modalRef","timer","focusElement","focus","clearTimeout","createPortal","_localeMatch","args","localeMatch","cacheKey","getTranslateTargetLanguage","fromSettings","navigator","languages","translationTargetLanguages","code","localeCode2Text","DisplayNames","type","of","throttle","pThrottle","limit","interval","lingvaTranslate","source","res","provider","translation","detectedSourceLanguage","detectedSource","throttledLingvaTranslate","forceTranslate","sourceLanguage","onTranslate","mini","targetLang","uiState","setPronunciationContent","pronunciationContent","translatedContent","detailsRef","detectedLang","sourceLangText","targetLangText","apiSourceLang","setUIState","detectedLangText","setDetectedLang","pronunciation","setTranslatedContent","open","behavior","lang","dir","sourceLanguages","name","useInterval","fn","deps","immediate","savedCallback","setInterval","tick","clearInterval","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","openCompose","URL","screenWidth","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","__COMPOSE__","visibilityIconsMap","public","unlisted","private","direct","NameText","showAvatar","showAcct","short","trimmedUsername","trimmedDisplayName","shortenedDisplayName","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","RelativeTime","datetime","dateStr","setDateStr","raf","update","str","now","diff","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","Poll","readOnly","votePoll","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","marginLeft","htmlContentLength","isMastodonLinkMaybe","pathname","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","_safeBoundingBoxPadding","paddings","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","safeBoundingBoxPadding","maxAge","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","isSafari","userAgent","Media","showOriginal","autoAnimate","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","enabled","draggableUnZoomed","inertiaFriction","containerProps","useMemo","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","maxHeight","mediaStyles","aspectRatio","mode","backgroundImage","backgroundSize","QuickPinchZoom","backgroundColor","backgroundPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","videoHTML","pause","onMouseEnter","onMouseLeave","poster","preload","playsinline","loop","muted","controls","autoplay","MenuLink","FocusableItem","closeMenu","detail","INLINE_TRANSLATE_LIMIT","fetchAccount","reject","memFetchAccount","visibilityText","Status","withinContext","contentTextWeight","enableTranslate","_forceTranslate","allowFilters","onMediaClick","quoted","onStatusLinkClick","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","language","editedAt","filtered","card","createdAt","reblog","_deleted","debugHover","createdAtDate","editedAtDate","inReplyToAccountRef","isSelf","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","showSpoiler","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showReactions","setShowReactions","spoilerContentRef","scrollHeight","clientHeight","useResizeObserver","contentRef","statusRef","unauthInteractionErrorMessage","textWeight","createdDateText","readMoreText","editedDateText","mediaNoDesc","replyToStatus","boostStatus","confirmText","yes","newStatus","favouriteStatus","bookmarkStatus","differentLanguage","menuInstanceRef","MenuHeader","StatusMenuItems","MenuDivider","done","replyStatus","setForceTranslate","nicePostURL","editStatus","cachedStatus","setIsContextMenuOpen","contextMenuAnchorPoint","setContextMenuAnchorPoint","bindLongPressContext","useLongPress","clientX","clientY","isContextMenuOpen","showContextMenu","detect","cancelOnMovement","metaKey","contextMenuRef","state","portal","currentTarget","url2","result","removeAttribute","unfurlMastodonLink","QuoteStatuses","newPoll","pollResponse","TranslationBlock","vote","Card","StatusButton","canBoost","confirmBoostStatus","checked","count","EditedAtModal","ReactionsModal","onClose","providerName","authorName","embedUrl","hasText","isLandscape","cardStatusURL","blurhashImage","setCardStatusURL","imageData","blurhashPixels","w","h","putImageData","videoID","fetchStatusHistory","editHistory","setEditHistory","editHistory2","REACTIONS_LIMIT","setAccounts","showMore","setShowMore","reblogIterator","favouriteIterator","fetchAccounts","firstLoad","favouriteResults","reblogResults","_c","theAccount","_types","InView","favourite","onChange","inView","setButtonTitle","buttonTitle","iconAlt","hours","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapshot","padStart","remoteInstanceFetch","theURL","urlObj","statusMatch","instanceRegex","resolve","debug","mastoSearchFetch","results","handleFulfill","instance2","then","selfURL","handleCatch","host","restPath","filterInfo","isReblog","filterTitleStr","setShowPeek","bindLongPressPeek","statusPeekText","showPeek","tabIndex","quotes","uniqueQuotes","q","arr","q2","level","supportedLanguagesMap","supportedLanguages","reduce","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entries","entry","isIntersecting","boundingClientRect","innerWidth","observe","DEFAULT_LANG","urlRegexObj","urlRegex","flags","usernameRegex","urlPlaceholder","countableText","inputText","Compose","draftStatus","standalone","hasOpener","UID","log","maxMediaAttachments","charactersReservedPerUrl","maxCharacters","imageSizeLimit","imageMatrixLimit","supportedMimeTypes","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxCharactersPerOption","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","prevLanguage","setMediaAttachments","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","currentAccountInfo","allMentions","prefs","setSensitive","poll2","expiresIn","statusSource","mediaAttachments2","setVisibility","setPoll","composablePoll","beforeUnloadCopy","hasMediaAttachments","canClose","hasOnlyAcct","confirmClose","hasIDMediaAttachments","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","escDownRef","useHotkeys","addEventListener","prevBackgroundDraft","draftKey","saveUnsavedDraft","equal","backgroundDraft","handleItems","item","items","i2","file","files","allowedFiles","updatedAt","error","mediaFiles","handleDragover","showEmoji2Picker","setShowEmoji2Picker","passData","createObjectURL","dataTransfer","removeEventListener","opener","formRef","pointerEvents","opacity","mediaPromises","params2","removeNullUndefined","some","hasNoDescriptions","params","e2","media_attributes","in_reply_to_id","Textarea","fileID","MediaAttachment","attachments","j","placeholder","required","onInput","newAttachments","accept","CharCountMeter","codeA","commonA","codeB","commonB","CustomEmojisModal","selectionEnd","textarea","newText","selectionStart","emojiWithSpace","sort","performSearch","textareaProps","charCount","customEmojis","textExpanderTextRef","handleCommited","handleChange","text2","encodeHTML","displayNameWithEmoji","provide","matched","input","searchResults","textExpanderRef","handleValue","setText","offset","leftChars","onRemove","autoCorrect","setDescription","suffixType","debouncedOnDescriptionChange","useDebouncedCallback","onDescriptionChange","showModal","setShowModal","descTextarea","supportsEdit","searchTerm","splice","bLower","b","bStartsWith","aContains","aLower","bContains","aStartsWith","char","obj","setCustomEmojis","othersCat","emojisCat","filterShortcodes","bothStartWith","category","customEmojisList","recentlyUsedCustomEmojis","onSelect","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","visibleInPicker","VITE_CLIENT_NAME","CLIENT_NAME","import","useTitle","setTitle","hasPaths","paths","matchPath"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/states.js","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/utils/show-toast.js","../../src/components/avatar.jsx","../../src/components/emoji-text.jsx","../../src/components/icon.jsx","../../src/components/account-block.jsx","../../src/components/link.jsx","../../src/utils/supports.js","../../src/components/menu-confirm.jsx","../../src/components/loader.jsx","../../src/components/modal.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/components/translation-block.jsx","../../src/utils/useInterval.js","../../src/utils/db.js","../../src/utils/open-compose.js","../../src/utils/visibility-icons-map.js","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/components/poll.jsx","../../src/utils/html-content-length.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/utils/status-peek.jsx","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\n\nexport function getAccount(id) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.info.id === id) || accounts[0];\n}\n\nexport function getAccountByAccessToken(accessToken) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.accessToken === accessToken);\n}\n\nexport function getCurrentAccount() {\n  const currentAccount = store.session.get('currentAccount');\n  const account = getAccount(currentAccount);\n  return account;\n}\n\nexport function getCurrentAccountNS() {\n  const account = getCurrentAccount();\n  const {\n    instanceURL,\n    info: { id },\n  } = account;\n  return `${id}@${instanceURL}`;\n}\n\nexport function saveAccount(account) {\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === account.info.id);\n  if (acc) {\n    acc.info = account.info;\n    acc.instanceURL = account.instanceURL;\n    acc.accessToken = account.accessToken;\n    acc.vapidKey = account.vapidKey;\n  } else {\n    accounts.push(account);\n  }\n  store.local.setJSON('accounts', accounts);\n  store.session.set('currentAccount', account.info.id);\n}\n\nexport function updateAccount(accountInfo) {\n  // Only update if displayName or avatar or avatar_static is different\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\n  if (acc) {\n    if (\n      acc.info.displayName !== accountInfo.displayName ||\n      acc.info.avatar !== accountInfo.avatar ||\n      acc.info.avatar_static !== accountInfo.avatar_static\n    ) {\n      acc.info = {\n        ...acc.info,\n        ...accountInfo,\n      };\n      store.local.setJSON('accounts', accounts);\n    }\n  }\n}\n\nlet currentInstance = null;\nexport function getCurrentInstance() {\n  if (currentInstance) return currentInstance;\n  try {\n    const account = getCurrentAccount();\n    const instances = store.local.getJSON('instances');\n    const instance = account.instanceURL.toLowerCase();\n    return (currentInstance = instances[instance]);\n  } catch (e) {\n    console.error(e);\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\n    // Temporary fix for corrupted data\n    store.local.del('instances');\n    location.reload();\n    return {};\n  }\n}\n","import { getCurrentAccountNS } from './store-utils';\n\nconst local = {\n  get: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(local.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return local.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nconst session = {\n  get: (key) => {\n    try {\n      return sessionStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(session.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return sessionStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return session.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return sessionStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\n// Store with account namespace (id@domain.tld) <- uses id, not username\nconst account = {\n  get: (key) => {\n    try {\n      return local.getJSON(key)[getCurrentAccountNS()];\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      const data = local.getJSON(key) || {};\n      data[getCurrentAccountNS()] = value;\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      const data = local.getJSON(key) || {};\n      delete data[getCurrentAccountNS()];\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nexport default { local, session, account };\n","import { createClient } from 'masto';\n\nimport store from './store';\nimport {\n  getAccount,\n  getAccountByAccessToken,\n  getCurrentAccount,\n  saveAccount,\n} from './store-utils';\n\n// Default *fallback* instance\nconst DEFAULT_INSTANCE = 'stargate.pbcarrara.com.br';\n\n// Per-instance masto instance\n// Useful when only one account is logged in\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\n// E.g. apis['mastodon.social']\nconst apis = {};\n\n// Per-account masto instance\n// Note: There can be many accounts per instance\n// Useful when multiple accounts are logged in or when certain actions require a specific account\n// Just in case if I need this one day.\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\nconst accountApis = {};\nwindow.__ACCOUNT_APIS__ = accountApis;\n\n// Current account masto instance\nlet currentAccountApi;\n\nexport function initClient({ instance, accessToken }) {\n  if (/^https?:\\/\\//.test(instance)) {\n    instance = instance\n      .replace(/^https?:\\/\\//, '')\n      .replace(/\\/+$/, '')\n      .toLowerCase();\n  }\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\n\n  const client = createClient({\n    url,\n    accessToken, // Can be null\n    disableVersionCheck: true, // Allow non-Mastodon instances\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\n  });\n  client.__instance__ = instance;\n\n  apis[instance] = client;\n  if (!accountApis[instance]) accountApis[instance] = {};\n  if (accessToken) accountApis[instance][accessToken] = client;\n\n  return client;\n}\n\n// Get the instance information\n// The config is needed for composing\nexport async function initInstance(client, instance) {\n  const masto = client;\n  // Request v2, fallback to v1 if fail\n  let info;\n  try {\n    info = await masto.v2.instance.fetch();\n  } catch (e) {}\n  if (!info) {\n    try {\n      info = await masto.v1.instances.fetch();\n    } catch (e) {}\n  }\n  if (!info) return;\n  console.log(info);\n  const {\n    // v1\n    uri,\n    urls: { streamingApi } = {},\n    // v2\n    domain,\n    configuration: { urls: { streaming } = {} } = {},\n  } = info;\n  const instances = store.local.getJSON('instances') || {};\n  if (uri || domain) {\n    instances[\n      (domain || uri)\n        .replace(/^https?:\\/\\//, '')\n        .replace(/\\/+$/, '')\n        .toLowerCase()\n    ] = info;\n  }\n  if (instance) {\n    instances[instance.toLowerCase()] = info;\n  }\n  store.local.setJSON('instances', instances);\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\n  if (streamingApi || streaming) {\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\n    masto.config.props.streamingApiUrl = streaming || streamingApi;\n  }\n}\n\n// Get the account information and store it\nexport async function initAccount(client, instance, accessToken, vapidKey) {\n  const masto = client;\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\n\n  store.session.set('currentAccount', mastoAccount.id);\n\n  saveAccount({\n    info: mastoAccount,\n    instanceURL: instance.toLowerCase(),\n    accessToken,\n    vapidKey,\n  });\n}\n\n// Get preferences\nexport async function initPreferences(client) {\n  try {\n    const masto = client;\n    const preferences = await masto.v1.preferences.fetch();\n    store.account.set('preferences', preferences);\n  } catch (e) {\n    // silently fail\n    console.error(e);\n  }\n}\n\n// Get the masto instance\n// If accountID is provided, get the masto instance for that account\nexport function api({ instance, accessToken, accountID, account } = {}) {\n  // Always lowercase and trim the instance\n  if (instance) {\n    instance = instance.toLowerCase().trim();\n  }\n\n  // If instance and accessToken are provided, get the masto instance for that account\n  if (instance && accessToken) {\n    return {\n      masto:\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken }),\n      authenticated: true,\n      instance,\n    };\n  }\n\n  if (accessToken) {\n    // If only accessToken is provided, get the masto instance for that accessToken\n    console.log('X 1', accountApis);\n    for (const instance in accountApis) {\n      if (accountApis[instance][accessToken]) {\n        console.log('X 2', accountApis, instance, accessToken);\n        return {\n          masto: accountApis[instance][accessToken],\n          authenticated: true,\n          instance,\n        };\n      } else {\n        console.log('X 3', accountApis, instance, accessToken);\n        const account = getAccountByAccessToken(accessToken);\n        if (account) {\n          const accessToken = account.accessToken;\n          const instance = account.instanceURL.toLowerCase().trim();\n          return {\n            masto: initClient({ instance, accessToken }),\n            authenticated: true,\n            instance,\n          };\n        } else {\n          throw new Error(`Access token ${accessToken} not found`);\n        }\n      }\n    }\n  }\n\n  // If account is provided, get the masto instance for that account\n  if (account || accountID) {\n    account = account || getAccount(accountID);\n    if (account) {\n      const accessToken = account.accessToken;\n      const instance = account.instanceURL.toLowerCase().trim();\n      return {\n        masto:\n          accountApis[instance]?.[accessToken] ||\n          initClient({ instance, accessToken }),\n        authenticated: true,\n        instance,\n      };\n    } else {\n      throw new Error(`Account ${accountID} not found`);\n    }\n  }\n\n  // If only instance is provided, get the masto instance for that instance\n  if (instance) {\n    const masto = apis[instance] || initClient({ instance });\n    return {\n      masto,\n      authenticated: !!masto.config.props.accessToken,\n      instance,\n    };\n  }\n\n  // If no instance is provided, get the masto instance for the current account\n  if (currentAccountApi) {\n    return {\n      masto: currentAccountApi,\n      authenticated: true,\n      instance: currentAccountApi.__instance__,\n    };\n  }\n  const currentAccount = getCurrentAccount();\n  if (currentAccount) {\n    const { accessToken, instanceURL: instance } = currentAccount;\n    currentAccountApi =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    return {\n      masto: currentAccountApi,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\n  return {\n    masto: apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE }),\n    authenticated: false,\n    instance: DEFAULT_INSTANCE,\n  };\n}\n\nwindow.__API__ = {\n  currentAccountApi,\n  apis,\n  accountApis,\n};\n","import mem from 'mem';\nimport { proxy, subscribe } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport { api } from './api';\nimport store from './store';\n\nconst states = proxy({\n  appVersion: {},\n  // history: [],\n  prevLocation: null,\n  currentLocation: null,\n  statuses: {},\n  statusThreadNumber: {},\n  home: [],\n  // specialHome: [],\n  homeNew: [],\n  homeLast: null, // Last item in 'home' list\n  homeLastFetchTime: null,\n  notifications: [],\n  notificationsLast: store.account.get('notificationsLast') || null, // Last read notification\n  notificationsNew: [],\n  notificationsShowNew: false,\n  notificationsLastFetchTime: null,\n  accounts: {},\n  reloadStatusPage: 0,\n  spoilers: {},\n  scrollPositions: {},\n  unfurledLinks: {},\n  statusQuotes: {},\n  accounts: {},\n  routeNotification: null,\n  // Modals\n  showCompose: false,\n  showSettings: false,\n  showAccount: false,\n  showAccounts: false,\n  showDrafts: false,\n  showMediaModal: false,\n  showShortcutsSettings: false,\n  // Shortcuts\n  shortcuts: store.account.get('shortcuts') ?? [],\n  // Settings\n  settings: {\n    autoRefresh: store.account.get('settings-autoRefresh') ?? false,\n    shortcutsViewMode: store.account.get('settings-shortcutsViewMode') ?? null,\n    shortcutsColumnsMode:\n      store.account.get('settings-shortcutsColumnsMode') ?? false,\n    boostsCarousel: store.account.get('settings-boostsCarousel') ?? true,\n    contentTranslation:\n      store.account.get('settings-contentTranslation') ?? true,\n    contentTranslationTargetLanguage:\n      store.account.get('settings-contentTranslationTargetLanguage') || null,\n    contentTranslationHideLanguages:\n      store.account.get('settings-contentTranslationHideLanguages') || [],\n    contentTranslationAutoInline:\n      store.account.get('settings-contentTranslationAutoInline') ?? false,\n    cloakMode: store.account.get('settings-cloakMode') ?? false,\n  },\n});\n\nexport default states;\n\nexport function initStates() {\n  // init all account based states\n  // all keys that uses store.account.get() should be initialized here\n  states.notificationsLast = store.account.get('notificationsLast') || null;\n  states.shortcuts = store.account.get('shortcuts') ?? [];\n  states.settings.autoRefresh =\n    store.account.get('settings-autoRefresh') ?? false;\n  states.settings.shortcutsViewMode =\n    store.account.get('settings-shortcutsViewMode') ?? null;\n  states.settings.shortcutsColumnsMode =\n    store.account.get('settings-shortcutsColumnsMode') ?? false;\n  states.settings.boostsCarousel =\n    store.account.get('settings-boostsCarousel') ?? true;\n  states.settings.contentTranslation =\n    store.account.get('settings-contentTranslation') ?? true;\n  states.settings.contentTranslationTargetLanguage =\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\n  states.settings.contentTranslationHideLanguages =\n    store.account.get('settings-contentTranslationHideLanguages') || [];\n  states.settings.contentTranslationAutoInline =\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\n}\n\nsubscribeKey(states, 'notificationsLast', (v) => {\n  console.log('CHANGE', v);\n  store.account.set('notificationsLast', states.notificationsLast);\n});\nsubscribe(states, (changes) => {\n  console.debug('STATES change', changes);\n  for (const [action, path, value, prevValue] of changes) {\n    if (path.join('.') === 'settings.autoRefresh') {\n      store.account.set('settings-autoRefresh', !!value);\n    }\n    if (path.join('.') === 'settings.boostsCarousel') {\n      store.account.set('settings-boostsCarousel', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutsColumnsMode') {\n      store.account.set('settings-shortcutsColumnsMode', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      store.account.set('settings-shortcutsViewMode', value);\n    }\n    if (path.join('.') === 'settings.contentTranslation') {\n      store.account.set('settings-contentTranslation', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\n      store.account.set('settings-contentTranslationAutoInline', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\n      console.log('SET', value);\n      store.account.set('settings-contentTranslationTargetLanguage', value);\n    }\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\n      store.account.set(\n        'settings-contentTranslationHideLanguages',\n        states.settings.contentTranslationHideLanguages,\n      );\n    }\n    if (path?.[0] === 'shortcuts') {\n      store.account.set('shortcuts', states.shortcuts);\n    }\n    if (path.join('.') === 'settings.cloakMode') {\n      store.account.set('settings-cloakMode', !!value);\n    }\n  }\n});\n\nexport function hideAllModals() {\n  states.showCompose = false;\n  states.showSettings = false;\n  states.showAccount = false;\n  states.showAccounts = false;\n  states.showDrafts = false;\n  states.showMediaModal = false;\n  states.showShortcutsSettings = false;\n}\n\nexport function statusKey(id, instance) {\n  if (!id) return;\n  return instance ? `${instance}/${id}` : id;\n}\n\nexport function getStatus(statusID, instance) {\n  if (instance) {\n    const key = statusKey(statusID, instance);\n    return states.statuses[key];\n  }\n  return states.statuses[statusID];\n}\n\nexport function saveStatus(status, instance, opts) {\n  if (typeof instance === 'object') {\n    opts = instance;\n    instance = null;\n  }\n  const { override, skipThreading } = Object.assign(\n    { override: true, skipThreading: false },\n    opts,\n  );\n  if (!status) return;\n  const oldStatus = getStatus(status.id, instance);\n  if (!override && oldStatus) return;\n  const key = statusKey(status.id, instance);\n  if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\n  if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\n  states.statuses[key] = status;\n  if (status.reblog) {\n    const key = statusKey(status.reblog.id, instance);\n    states.statuses[key] = status.reblog;\n  }\n\n  // THREAD TRAVERSER\n  if (!skipThreading) {\n    requestAnimationFrame(() => {\n      threadifyStatus(status, instance);\n      if (status.reblog) {\n        threadifyStatus(status.reblog, instance);\n      }\n    });\n  }\n}\n\nexport function threadifyStatus(status, propInstance) {\n  const { masto, instance } = api({ instance: propInstance });\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\n  let fetchIndex = 0;\n  async function traverse(status, index = 0) {\n    const { inReplyToId, inReplyToAccountId } = status;\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\n      return [status];\n    }\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\n      throw 'Not a thread';\n      // Possibly thread of replies by multiple people?\n    }\n    const key = statusKey(inReplyToId, instance);\n    let prevStatus = states.statuses[key];\n    if (!prevStatus) {\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\n      // prevStatus = await masto.v1.statuses.fetch(inReplyToId);\n      prevStatus = await fetchStatus(inReplyToId, masto);\n      saveStatus(prevStatus, instance, { skipThreading: true });\n    }\n    // Prepend so that first status in thread will be index 0\n    return [...(await traverse(prevStatus, ++index)), status];\n  }\n  return traverse(status)\n    .then((statuses) => {\n      if (statuses.length > 1) {\n        console.debug('THREAD', statuses);\n        statuses.forEach((status, index) => {\n          const key = statusKey(status.id, instance);\n          states.statusThreadNumber[key] = index + 1;\n        });\n      }\n    })\n    .catch((e) => {\n      console.error(e, status);\n    });\n}\n\nconst fetchStatus = mem((statusID, masto) => {\n  return masto.v1.statuses.fetch(statusID);\n});\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"12\" height=\"12\" loading=\"lazy\" decoding=\"async\" /></picture>`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\n\nconst fauxDiv = document.createElement('div');\n\nfunction enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n  const hasLink = /<a/i.test(enhancedContent);\n  const hasCodeBlock = enhancedContent.indexOf('```') !== -1;\n\n  // Add target=\"_blank\" to all links with no target=\"_blank\"\n  // E.g. `note` in `account`\n  if (hasLink) {\n    const noTargetBlankLinks = Array.from(\n      dom.querySelectorAll('a:not([target=\"_blank\"])'),\n    );\n    noTargetBlankLinks.forEach((link) => {\n      link.setAttribute('target', '_blank');\n    });\n  }\n\n  // Add 'has-url-text' to all links that contains a url\n  if (hasLink) {\n    const links = Array.from(dom.querySelectorAll('a[href]'));\n    links.forEach((link) => {\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\n        link.classList.add('has-url-text');\n      }\n    });\n  }\n\n  // Spanify un-spanned mentions\n  if (hasLink) {\n    const links = Array.from(dom.querySelectorAll('a[href]'));\n    const usernames = [];\n    links.forEach((link) => {\n      const text = link.innerText.trim();\n      const hasChildren = link.querySelector('*');\n      // If text looks like @username@domain, then it's a mention\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\n        // Only show @username\n        const [_, username, domain] = text.split('@');\n        if (!hasChildren) {\n          if (\n            !usernames.find(([u]) => u === username) ||\n            usernames.find(([u, d]) => u === username && d === domain)\n          ) {\n            link.innerHTML = `@<span>${username}</span>`;\n            usernames.push([username, domain]);\n          } else {\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\n          }\n        }\n        link.classList.add('mention');\n      }\n      // If text looks like #hashtag, then it's a hashtag\n      if (/^#[^#]+$/g.test(text)) {\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\n        link.classList.add('mention', 'hashtag');\n      }\n    });\n  }\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes;\n  if (enhancedContent.indexOf(':') !== -1) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (emojis) {\n        html = emojifyText(html, emojis);\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\n      /^```[^]+```$/g.test(p.innerText.trim()),\n    );\n    blocks.forEach((block) => {\n      const pre = document.createElement('pre');\n      // Replace <br /> with newlines\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n      block.replaceWith(pre);\n    });\n  }\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const paragraphs = Array.from(dom.querySelectorAll('p'));\n    // Filter out paragraphs with ``` in beginning only\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n    codeBlocks.forEach((block) => {\n      const nextParagraphs = [block];\n      let hasCodeBlock = false;\n      let currentBlock = block;\n      while (currentBlock.nextElementSibling) {\n        const next = currentBlock.nextElementSibling;\n        if (next && next.tagName === 'P') {\n          if (/```$/g.test(next.innerText)) {\n            nextParagraphs.push(next);\n            hasCodeBlock = true;\n            break;\n          } else {\n            nextParagraphs.push(next);\n          }\n        } else {\n          break;\n        }\n        currentBlock = next;\n      }\n      if (hasCodeBlock) {\n        const pre = document.createElement('pre');\n        nextParagraphs.forEach((p) => {\n          // Replace <br /> with newlines\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n        });\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\n        block.replaceWith(pre);\n        nextParagraphs.forEach((p) => p.remove());\n      }\n    });\n  }\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  if (enhancedContent.indexOf('`') !== -1) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/`[^`]+`/g.test(html)) {\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  if (/twitter\\.com/i.test(enhancedContent)) {\n    textNodes = extractTextNodes(dom, {\n      rejectFilter: ['A'],\n    });\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n        html = html.replaceAll(\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n        );\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // HASHTAG STUFFING\n  // ================\n  // Get the <p> that contains a lot of hashtags, add a class to it\n  if (enhancedContent.indexOf('#') !== -1) {\n    let prevIndex = null;\n    const hashtagStuffedParagraphs = Array.from(\n      dom.querySelectorAll('p'),\n    ).filter((p, index) => {\n      let hashtagCount = 0;\n      for (let i = 0; i < p.childNodes.length; i++) {\n        const node = p.childNodes[i];\n\n        if (node.nodeType === Node.TEXT_NODE) {\n          const text = node.textContent.trim();\n          if (text !== '') {\n            return false;\n          }\n        } else if (node.tagName === 'BR') {\n          // Ignore <br />\n        } else if (node.tagName === 'A') {\n          const linkText = node.textContent.trim();\n          if (!linkText || !linkText.startsWith('#')) {\n            return false;\n          } else {\n            hashtagCount++;\n          }\n        } else {\n          return false;\n        }\n      }\n      // Only consider \"stuffing\" if:\n      // - there are more than 3 hashtags\n      // - there are more than 1 hashtag in adjacent paragraphs\n      if (hashtagCount > 3) {\n        prevIndex = index;\n        return true;\n      }\n      if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\n        prevIndex = index;\n        return true;\n      }\n    });\n    if (hashtagStuffedParagraphs?.length) {\n      hashtagStuffedParagraphs.forEach((p) => {\n        p.classList.add('hashtag-stuffing');\n        p.title = p.innerText;\n      });\n    }\n  }\n\n  if (postEnhanceDOM) {\n    postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        if (\n          opts.rejectFilter &&\n          opts.rejectFilter.includes(node.parentNode.nodeName)\n        ) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","const div = document.createElement('div');\nfunction getHTMLText(html) {\n  if (!html) return '';\n  div.innerHTML = html\n    .replace(/<\\/p>/g, '</p>\\n\\n')\n    .replace(/<\\/li>/g, '</li>\\n');\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\n}\n\nexport default getHTMLText;\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance, previewMode } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n    const prevText = target.previousSibling?.textContent;\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\n    const textStartsWithAt = target.innerText.startsWith('@');\n    if (\n      (target.classList.contains('u-url') && textStartsWithAt) ||\n      (textBeforeLinkIsAt && !textStartsWithAt)\n    ) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      const mention = mentions.find(\n        (mention) =>\n          mention.username === username ||\n          mention.acct === username ||\n          mention.url === url,\n      );\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (!previewMode) {\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tag = target.innerText.replace(/^#/, '').trim();\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n        console.log({ hashURL });\n        location.hash = hashURL;\n      } else if (states.unfurledLinks[target.href]?.url) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.prevLocation = {\n          pathname: location.hash.replace(/^#/, ''),\n        };\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\n      }\n    }\n  };\n}\n\nexport default handleContentLinks;\n","const { locale } = new Intl.DateTimeFormat().resolvedOptions();\n\nfunction niceDateTime(date, { hideTime, formatOpts } = {}) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const currentYear = new Date().getFullYear();\n  const dateText = Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: date.getFullYear() === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    // Hide time if requested\n    hour: hideTime ? undefined : 'numeric',\n    minute: hideTime ? undefined : 'numeric',\n    ...formatOpts,\n  }).format(date);\n  return dateText;\n}\n\nexport default niceDateTime;\n","const { locale } = Intl.NumberFormat().resolvedOptions();\nconst shortenNumber = Intl.NumberFormat(locale, {\n  notation: 'compact',\n}).format;\nexport default shortenNumber;\n","import Toastify from 'toastify-js';\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick, delay, ...rest } = props;\n  const toast = Toastify({\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick?.(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n}\n\nexport default showToast;\n","import './avatar.css';\n\nimport { useRef } from 'preact/hooks';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nconst alphaCache = {};\n\nconst canvas = window.OffscreenCanvas\n  ? new OffscreenCanvas(1, 1)\n  : document.createElement('canvas');\nconst ctx = canvas.getContext('2d');\n\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  const avatarRef = useRef();\n  const isMissing = /missing\\.png$/.test(url);\n  return (\n    <span\n      ref={avatarRef}\n      class={`avatar ${squircle ? 'squircle' : ''} ${\n        alphaCache[url] ? 'has-alpha' : ''\n      }`}\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img\n          src={url}\n          width={size}\n          height={size}\n          alt={alt}\n          loading=\"lazy\"\n          decoding=\"async\"\n          crossOrigin={\n            alphaCache[url] === undefined && !isMissing\n              ? 'anonymous'\n              : undefined\n          }\n          onError={(e) => {\n            if (e.target.crossOrigin) {\n              e.target.crossOrigin = null;\n              e.target.src = url;\n            }\n          }}\n          onLoad={(e) => {\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\n            if (alphaCache[url] !== undefined) return;\n            if (isMissing) return;\n            try {\n              // Check if image has alpha channel\n              const { width, height } = e.target;\n              if (canvas.width !== width) canvas.width = width;\n              if (canvas.height !== height) canvas.height = height;\n              ctx.drawImage(e.target, 0, 0);\n              const allPixels = ctx.getImageData(0, 0, width, height);\n              // At least 10% of pixels have alpha <= 128\n              const hasAlpha =\n                allPixels.data.filter((pixel, i) => i % 4 === 3 && pixel <= 128)\n                  .length /\n                  (allPixels.data.length / 4) >\n                0.1;\n              if (hasAlpha) {\n                // console.log('hasAlpha', hasAlpha, allPixels.data);\n                avatarRef.current.classList.add('has-alpha');\n              }\n              alphaCache[url] = hasAlpha;\n              ctx.clearRect(0, 0, width, height);\n            } catch (e) {\n              // Silent fail\n              alphaCache[url] = false;\n            }\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default Avatar;\n","function EmojiText({ text, emojis }) {\n  if (!text) return '';\n  if (!emojis?.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  const regex = new RegExp(\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\n    'g',\n  );\n  const elements = text.split(regex).map((word) => {\n    const emoji = emojis.find((e) => e.shortcode === word);\n    if (emoji) {\n      const { url, staticUrl } = emoji;\n      return (\n        <picture>\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            key={word}\n            src={url}\n            alt={word}\n            class=\"shortcode-emoji emoji\"\n            width=\"12\"\n            height=\"12\"\n            loading=\"lazy\"\n            decoding=\"async\"\n          />\n        </picture>\n      );\n    }\n    return word;\n  });\n  return elements;\n}\n\nexport default EmojiText;\n","import { useEffect, useState } from 'preact/hooks';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nexport const ICONS = {\n  x: () => import('@iconify-icons/mingcute/close-line'),\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\n  message: () => import('@iconify-icons/mingcute/mail-line'),\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\n  at: () => import('@iconify-icons/mingcute/at-line'),\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\n  reply: [\n    () => import('@iconify-icons/mingcute/share-forward-line'),\n    '180deg',\n    'horizontal',\n  ],\n  thread: () => import('@iconify-icons/mingcute/route-line'),\n  group: () => import('@iconify-icons/mingcute/group-line'),\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\n  info: () => import('@iconify-icons/mingcute/information-line'),\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\n  following: () => import('@iconify-icons/mingcute/walk-line'),\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\n  history: () => import('@iconify-icons/mingcute/history-line'),\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\n  play: () => import('@iconify-icons/mingcute/play-fill'),\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\n  unblock: [\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\n    '180deg',\n  ],\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\n  time: () => import('@iconify-icons/mingcute/time-line'),\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\n  react: () => import('@iconify-icons/mingcute/react-line'),\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\n  round: () => import('@iconify-icons/mingcute/round-fill'),\n  'arrow-up-circle': () =>\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\n  'arrow-down-circle': () =>\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\n};\n\nfunction Icon({\n  icon,\n  size = 'm',\n  alt,\n  title,\n  class: className = '',\n  style = {},\n}) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconBlock = ICONS[icon];\n  let rotate, flip;\n  if (Array.isArray(iconBlock)) {\n    [iconBlock, rotate, flip] = iconBlock;\n  }\n\n  const [iconData, setIconData] = useState(null);\n  useEffect(async () => {\n    const icon = await iconBlock();\n    setIconData(icon.default);\n  }, [iconBlock]);\n\n  return (\n    <div\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        display: 'inline-block',\n        overflow: 'hidden',\n        lineHeight: 0,\n        ...style,\n      }}\n    >\n      {iconData && (\n        <svg\n          width={iconSize}\n          height={iconSize}\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\n          style={{\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\n              flip ? `scaleX(-1)` : ''\n            }`,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Icon;\n","import './account-block.css';\n\n// import { useNavigate } from 'react-router-dom';\nimport enhanceContent from '../utils/enhance-content';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\n\nfunction AccountBlock({\n  skeleton,\n  account,\n  avatarSize = 'xl',\n  instance,\n  external,\n  internal,\n  onClick,\n  showActivity = false,\n  showStats = false,\n  accountInstance,\n  hideDisplayName = false,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"account-block skeleton\">\n        <Avatar size={avatarSize} />\n        <span>\n          <b>████████</b>\n          <br />\n          <span class=\"account-block-acct\">@██████</span>\n        </span>\n      </div>\n    );\n  }\n\n  // const navigate = useNavigate();\n\n  const {\n    id,\n    acct,\n    avatar,\n    avatarStatic,\n    displayName,\n    username,\n    emojis,\n    url,\n    statusesCount,\n    lastStatusAt,\n    bot,\n    fields,\n    note,\n    group,\n  } = account;\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n  if (accountInstance) {\n    acct2 = `@${accountInstance}`;\n  }\n\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\n\n  return (\n    <a\n      class=\"account-block\"\n      href={url}\n      target={external ? '_blank' : null}\n      title={`@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        if (internal) {\n          // navigate(`/${instance}/a/${id}`);\n          location.hash = `/${instance}/a/${id}`;\n        } else {\n          states.showAccount = {\n            account,\n            instance,\n          };\n        }\n      }}\n    >\n      <Avatar url={avatar} size={avatarSize} squircle={bot} />\n      <span>\n        {!hideDisplayName && (\n          <>\n            {displayName ? (\n              <b>\n                <EmojiText text={displayName} emojis={emojis} />\n              </b>\n            ) : (\n              <b>{username}</b>\n            )}\n            <br />\n          </>\n        )}\n        <span class=\"account-block-acct\">\n          @{acct1}\n          <wbr />\n          {acct2}\n        </span>\n        {showActivity && (\n          <>\n            <br />\n            <small class=\"last-status-at insignificant\">\n              Posts: {statusesCount}\n              {!!lastStatusAt && (\n                <>\n                  {' '}\n                  &middot; Last posted:{' '}\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </>\n              )}\n            </small>\n          </>\n        )}\n        {showStats && (\n          <div class=\"account-block-stats\">\n            <div\n              class=\"short-desc\"\n              dangerouslySetInnerHTML={{\n                __html: enhanceContent(note, { emojis }),\n              }}\n            />\n            {bot && (\n              <>\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              </>\n            )}\n            {!!group && (\n              <>\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              </>\n            )}\n            {!!verifiedField && (\n              <span class=\"verified-field ib\">\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(verifiedField.value, { emojis }),\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        )}\n      </span>\n    </a>\n  );\n}\n\nexport default AccountBlock;\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n  // TODO: maybe better pass hash into URL to deconstruct the pathname and search, then decodeURIComponent them\n  const isActive = hash === to || decodeURIComponent(hash) === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","import { satisfies } from 'semver';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\nimport { cloneElement } from 'preact';\nimport { useRef } from 'preact/hooks';\n\nfunction MenuConfirm({\n  subMenu = false,\n  confirm = true,\n  confirmLabel,\n  menuItemClassName,\n  menuFooter,\n  ...props\n}) {\n  const { children, onClick, ...restProps } = props;\n  if (!confirm) {\n    if (subMenu) return <MenuItem {...props} />;\n    if (onClick) {\n      return cloneElement(children, {\n        onClick,\n      });\n    }\n    return children;\n  }\n  const Parent = subMenu ? SubMenu : Menu;\n  const menuRef = useRef();\n  return (\n    <Parent\n      instanceRef={menuRef}\n      openTrigger=\"clickOnly\"\n      direction=\"bottom\"\n      overflow=\"auto\"\n      gap={-8}\n      shift={8}\n      menuClassName=\"menu-emphasized\"\n      {...restProps}\n      menuButton={subMenu ? undefined : children}\n      label={subMenu ? children : undefined}\n      // Test fix for bug; submenus not opening on Android\n      itemProps={{\n        onPointerMove: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n        onPointerLeave: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n      }}\n    >\n      <MenuItem className={menuItemClassName} onClick={onClick}>\n        {confirmLabel}\n      </MenuItem>\n      {menuFooter}\n    </Parent>\n  );\n}\n\nexport default MenuConfirm;\n","import './loader.css';\n\nfunction Loader({ abrupt, hidden, ...props }) {\n  return (\n    <div\n      {...props}\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      <div class=\"loader\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const Modal = (\n    <div ref={modalRef} className={className} onClick={onClick}>\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import { match } from '@formatjs/intl-localematcher';\nimport mem from 'mem';\n\nfunction _localeMatch(...args) {\n  // Wrap in try/catch because localeMatcher throws on invalid locales\n  try {\n    return match(...args);\n  } catch (e) {\n    const defaultLocale = args[2];\n    return defaultLocale || false;\n  }\n}\nconst localeMatch = mem(_localeMatch, {\n  cacheKey: (args) => args.join(),\n});\n\nexport default localeMatch;\n","import translationTargetLanguages from '../data/lingva-target-languages';\n\nimport localeMatch from './locale-match';\nimport states from './states';\n\nfunction getTranslateTargetLanguage(fromSettings = false) {\n  if (fromSettings) {\n    const { contentTranslationTargetLanguage } = states.settings;\n    if (contentTranslationTargetLanguage) {\n      return contentTranslationTargetLanguage;\n    }\n  }\n  return localeMatch(\n    [\n      new Intl.DateTimeFormat().resolvedOptions().locale,\n      ...navigator.languages,\n    ],\n    translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\n    'en',\n  );\n}\n\nexport default getTranslateTargetLanguage;\n","export default function localeCode2Text(code) {\n  try {\n    return new Intl.DisplayNames(navigator.languages, {\n      type: 'language',\n    }).of(code);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","import './translation-block.css';\n\nimport pThrottle from 'p-throttle';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport sourceLanguages from '../data/lingva-source-languages';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 2000,\n});\n\nfunction lingvaTranslate(text, source, target) {\n  console.log('TRANSLATE', text, source, target);\n  // Using another API instance instead of lingva.ml because of this bug (slashes don't work):\n  // https://github.com/thedaviddelta/lingva-translate/issues/68\n  return fetch(\n    `https://lingva.garudalinux.org/api/v1/${source}/${target}/${encodeURIComponent(\n      text,\n    )}`,\n  )\n    .then((res) => res.json())\n    .then((res) => {\n      return {\n        provider: 'lingva',\n        content: res.translation,\n        detectedSourceLanguage: res.info?.detectedSource,\n        info: res.info,\n      };\n    });\n  // return masto.v1.statuses.translate(id, {\n  //   lang: DEFAULT_LANG,\n  // });\n}\nconst throttledLingvaTranslate = throttle(lingvaTranslate);\n\nfunction TranslationBlock({\n  forceTranslate,\n  sourceLanguage,\n  onTranslate,\n  text = '',\n  mini,\n}) {\n  const targetLang = getTranslateTargetLanguage(true);\n  const [uiState, setUIState] = useState('default');\n  const [pronunciationContent, setPronunciationContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [detectedLang, setDetectedLang] = useState(null);\n  const detailsRef = useRef();\n\n  const sourceLangText = sourceLanguage\n    ? localeCode2Text(sourceLanguage)\n    : null;\n  const targetLangText = localeCode2Text(targetLang);\n  const apiSourceLang = useRef('auto');\n\n  if (!onTranslate) {\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\n  }\n\n  const translate = async () => {\n    setUIState('loading');\n    try {\n      const { content, detectedSourceLanguage, provider, ...props } =\n        await onTranslate(text, apiSourceLang.current, targetLang);\n      if (content) {\n        if (detectedSourceLanguage) {\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\n          setDetectedLang(detectedLangText);\n        }\n        if (provider === 'lingva') {\n          const pronunciation = props?.info?.pronunciation?.query;\n          if (pronunciation) {\n            setPronunciationContent(pronunciation);\n          }\n        }\n        setTranslatedContent(content);\n        setUIState('default');\n        if (!mini && content.trim() !== text.trim()) {\n          detailsRef.current.open = true;\n          detailsRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      } else {\n        console.error(result);\n        setUIState('error');\n      }\n    } catch (e) {\n      console.error(e);\n      setUIState('error');\n    }\n  };\n\n  useEffect(() => {\n    if (forceTranslate) {\n      translate();\n    }\n  }, [forceTranslate]);\n\n  if (mini) {\n    if (\n      !!translatedContent &&\n      translatedContent.trim() !== text.trim() &&\n      detectedLang !== targetLangText\n    ) {\n      return (\n        <div class=\"shazam-container\">\n          <div class=\"shazam-container-inner\">\n            <div class=\"status-translation-block-mini\">\n              <Icon\n                icon=\"translate\"\n                alt={`Auto-translated from ${sourceLangText}`}\n              />\n              <output\n                lang={targetLang}\n                dir=\"auto\"\n                title={pronunciationContent || ''}\n              >\n                {translatedContent}\n              </output>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div\n      class=\"status-translation-block\"\n      onClick={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <details ref={detailsRef}>\n        <summary>\n          <button\n            type=\"button\"\n            onClick={async (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              detailsRef.current.open = !detailsRef.current.open;\n              if (uiState === 'loading') return;\n              if (!translatedContent) translate();\n            }}\n          >\n            <Icon icon=\"translate\" />{' '}\n            <span>\n              {uiState === 'loading'\n                ? 'Translating…'\n                : sourceLanguage && sourceLangText && !detectedLang\n                ? `Translate from ${sourceLangText}`\n                : `Translate`}\n            </span>\n          </button>\n        </summary>\n        <div class=\"translated-block\">\n          <div class=\"translation-info insignificant\">\n            <select\n              class=\"translated-source-select\"\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                apiSourceLang.current = e.target.value;\n                translate();\n              }}\n            >\n              {sourceLanguages.map((l) => (\n                <option value={l.code}>\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\n                </option>\n              ))}\n            </select>{' '}\n            <span>→ {targetLangText}</span>\n            <Loader abrupt hidden={uiState !== 'loading'} />\n          </div>\n          {uiState === 'error' ? (\n            <p class=\"ui-state\">Failed to translate</p>\n          ) : (\n            !!translatedContent && (\n              <>\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\n                  {translatedContent}\n                </output>\n                {!!pronunciationContent && (\n                  <output\n                    class=\"translated-pronunciation-content\"\n                    tabIndex={-1}\n                    onClick={(e) => {\n                      e.target.classList.toggle('expand');\n                    }}\n                  >\n                    {pronunciationContent}\n                  </output>\n                )}\n              </>\n            )\n          )}\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default TranslationBlock;\n","import { useEffect, useRef } from 'preact/hooks';\n\nfunction useInterval(fn, delay, deps, immediate) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn, deps]);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nconst draftsStore = createStore('drafts-db', 'drafts-store');\n\n// Add additonal `draftsStore` parameter to all methods\n\nconst drafts = {\n  set: (key, val) => set(key, val, draftsStore),\n  get: (key) => get(key, draftsStore),\n  getMany: (keys) => getMany(keys, draftsStore),\n  del: (key) => del(key, draftsStore),\n  delMany: (keys) => delMany(keys, draftsStore),\n  clear: () => clear(draftsStore),\n  keys: () => keys(draftsStore),\n};\n\nexport default {\n  drafts,\n};\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts?.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  }\n\n  return newWin;\n}\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","import './name-text.css';\n\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\n    account;\n  let { username } = account;\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, '') // E.g. \"My name\" === \"myname\"\n    .replace(/[^a-z0-9]/gi, ''); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>@{username}</i>\n      ) : (\n        <b>@{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>\n            @{acct1}\n            <span class=\"ib\">{acct2}</span>\n          </i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default NameText;\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useState } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const date = dayjs(datetime);\n  const [dateStr, setDateStr] = useState('');\n\n  useEffect(() => {\n    let timer, raf;\n    const update = () => {\n      raf = requestAnimationFrame(() => {\n        let str;\n        if (format === 'micro') {\n          // If date <= 1 day ago or day is within this year\n          const now = dayjs();\n          const dayDiff = now.diff(date, 'day');\n          if (dayDiff <= 1 || now.year() === date.year()) {\n            str = date.twitter();\n          } else {\n            str = dtf.format(date.toDate());\n          }\n        } else {\n          str = date.fromNow();\n        }\n        setDateStr(str);\n\n        timer = setTimeout(update, 30_000);\n      });\n    };\n    raf = requestAnimationFrame(update);\n    return () => {\n      clearTimeout(timer);\n      cancelAnimationFrame(raf);\n    };\n  }, [date]);\n\n  return (\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\n      {dateStr}\n    </time>\n  );\n}\n","import { useState } from 'preact/hooks';\n\nimport shortenNumber from '../utils/shorten-number';\n\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport RelativeTime from './relative-time';\n\nexport default function Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n    emojis,\n  } = poll;\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\n  // https://stackoverflow.com/a/56718027/20838\n  // useEffect(() => {\n  //   let timeout;\n  //   if (!expired && expiresAtDate) {\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n  //     if (ms > 0) {\n  //       timeout = setTimeout(() => {\n  //         setUIState('loading');\n  //         (async () => {\n  //           // await refresh();\n  //           setUIState('default');\n  //         })();\n  //       }, ms);\n  //     }\n  //   }\n  //   return () => {\n  //     clearTimeout(timeout);\n  //   };\n  // }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\n\n  return (\n    <div\n      lang={lang}\n      dir=\"auto\"\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\n        <>\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title, votesCount: optionVotesCount } = option;\n              const percentage = pollVotesCount\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                    roundPrecision,\n                  )\n                : 0; // check if current poll choice is the leading one\n\n              const isLeading =\n                optionVotesCount > 0 &&\n                optionVotesCount ===\n                  Math.max(...options.map((o) => o.votesCount));\n              return (\n                <div\n                  key={`${i}-${title}-${optionVotesCount}`}\n                  class={`poll-option poll-result ${\n                    isLeading ? 'poll-option-leading' : ''\n                  }`}\n                  style={{\n                    '--percentage': `${percentage}%`,\n                  }}\n                >\n                  <div class=\"poll-option-title\">\n                    <span>\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                    {voted && ownVotes.includes(i) && (\n                      <>\n                        {' '}\n                        <Icon icon=\"check-circle\" />\n                      </>\n                    )}\n                  </div>\n                  <div\n                    class=\"poll-option-votes\"\n                    title={`${optionVotesCount} vote${\n                      optionVotesCount === 1 ? '' : 's'\n                    }`}\n                  >\n                    {percentage}%\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {!expired && !voted && (\n            <button\n              class=\"poll-vote-button plain2\"\n              disabled={uiState === 'loading'}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowResults(false);\n              }}\n            >\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\n            </button>\n          )}\n        </>\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title } = option;\n              return (\n                <div class=\"poll-option\">\n                  <label class=\"poll-label\">\n                    <input\n                      type={multiple ? 'checkbox' : 'radio'}\n                      name=\"poll\"\n                      value={i}\n                      disabled={uiState === 'loading'}\n                      readOnly={readOnly}\n                    />\n                    <span class=\"poll-option-title\">\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      <p class=\"poll-meta\">\n        {!expired && !readOnly && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            style={{\n              marginLeft: -8,\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setUIState('loading');\n\n              (async () => {\n                await refresh();\n                setUIState('default');\n              })();\n            }}\n          >\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\n          </button>\n        )}\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            onClick={(e) => {\n              e.preventDefault();\n              setShowResults(!showResults);\n            }}\n          >\n            <Icon\n              icon={showResults ? 'eye-open' : 'eye-close'}\n              alt={showResults ? 'Hide results' : 'Show results'}\n            />{' '}\n          </button>\n        )}\n        {!expired && !readOnly && ' '}\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n        {votesCount === 1 ? '' : 's'}\n        {!!votersCount && votersCount !== votesCount && (\n          <>\n            {' '}\n            &bull; <span title={votersCount}>\n              {shortenNumber(votersCount)}\n            </span>{' '}\n            voter\n            {votersCount === 1 ? '' : 's'}\n          </>\n        )}{' '}\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n      </p>{' '}\n    </div>\n  );\n}\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  return div.innerText.length;\n}\n","export default function isMastodonLinkMaybe(url) {\n  const { pathname } = new URL(url);\n  return (\n    /^\\/.*\\/\\d+$/i.test(pathname) ||\n    /^\\/@[^/]+\\/statuses\\/\\w+$/i.test(pathname) || // GoToSocial\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\n    /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) // Pleroma\n  );\n}\n","import mem from 'mem';\n\nconst root = document.documentElement;\nconst style = getComputedStyle(root);\nconst defaultBoundingBoxPadding = 8;\nfunction _safeBoundingBoxPadding(paddings = []) {\n  // paddings = [top, right, bottom, left]\n  // Get safe area inset variables from root\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\n  const str = [\n    safeAreaInsetTop,\n    safeAreaInsetRight,\n    safeAreaInsetBottom,\n    safeAreaInsetLeft,\n  ]\n    .map(\n      (v, i) =>\n        (parseInt(v, 10) || defaultBoundingBoxPadding) + (paddings[i] || 0),\n    )\n    .join(' ');\n  // console.log(str);\n  return str;\n}\nconst safeBoundingBoxPadding = mem(_safeBoundingBoxPadding, {\n  maxAge: 10000, // 10 seconds\n});\n\nexport default safeBoundingBoxPadding;\n","import getHTMLText from './getHTMLText';\n\nfunction statusPeek(status) {\n  const { spoilerText, content, poll, mediaAttachments } = status;\n  let text = '';\n  if (spoilerText?.trim()) {\n    text += spoilerText;\n  } else {\n    text += getHTMLText(content);\n  }\n  text = text.trim();\n  if (poll) {\n    text += ' 📊';\n  }\n  if (mediaAttachments?.length) {\n    text +=\n      ' ' +\n      mediaAttachments\n        .map(\n          (m) =>\n            ({\n              image: '🖼️',\n              gifv: '🎞️',\n              video: '📹',\n              audio: '🎵',\n              unknown: '',\n            }[m.type] || ''),\n        )\n        .join('');\n  }\n  return text;\n}\n\nexport default statusPeek;\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\n\nimport Icon from './icon';\nimport Link from './link';\nimport { formatDuration } from './status';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nfunction Media({ media, to, showOriginal, autoAnimate, onClick = () => {} }) {\n  const {\n    blurhash,\n    description,\n    meta,\n    previewRemoteUrl,\n    previewUrl,\n    remoteUrl,\n    url,\n    type,\n  } = media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl || url;\n  const remoteMediaURL = showOriginal\n    ? remoteUrl\n    : previewRemoteUrl || remoteUrl;\n  const orientation = width >= height ? 'landscape' : 'portrait';\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalBackgroundPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  const mediaRef = useRef();\n  const onUpdate = useCallback(({ x, y, scale }) => {\n    const { current: media } = mediaRef;\n\n    if (media) {\n      const value = make3dTransformValue({ x, y, scale });\n\n      if (scale === 1) {\n        media.style.removeProperty('transform');\n      } else {\n        media.style.setProperty('transform', value);\n      }\n\n      media.closest('.media-zoom').style.touchAction =\n        scale <= 1.01 ? 'pan-x' : '';\n    }\n  }, []);\n\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\n  const quickPinchZoomProps = {\n    enabled: pinchZoomEnabled,\n    draggableUnZoomed: false,\n    inertiaFriction: 0.9,\n    containerProps: {\n      className: 'media-zoom',\n      style: {\n        overflow: 'visible',\n        //   width: 'inherit',\n        //   height: 'inherit',\n        //   justifyContent: 'inherit',\n        //   alignItems: 'inherit',\n        //   display: 'inherit',\n      },\n    },\n    onUpdate,\n  };\n\n  const Parent = useMemo(\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\n    [to],\n  );\n\n  const isImage = type === 'image' || (type === 'unknown' && previewUrl);\n\n  const parentRef = useRef();\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\n  useLayoutEffect(() => {\n    if (!isImage) return;\n    if (!showOriginal) return;\n    if (!parentRef.current) return;\n    const { offsetWidth, offsetHeight } = parentRef.current;\n    const smaller = width < offsetWidth && height < offsetHeight;\n    if (smaller) setImageSmallerThanParent(smaller);\n  }, [width, height]);\n\n  const maxAspectHeight =\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\n  const mediaStyles = {\n    '--width': `${width}px`,\n    '--height': `${height}px`,\n    // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\n    '--aspectWidth': `${\n      (width / height) * Math.max(maxHeight, maxAspectHeight)\n    }px`,\n    aspectRatio: `${width} / ${height}`,\n  };\n\n  if (isImage) {\n    // Note: type: unknown might not have width/height\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\n\n    useLayoutEffect(() => {\n      if (!isSafari) return;\n      if (!showOriginal) return;\n      (async () => {\n        try {\n          await fetch(mediaURL, { mode: 'no-cors' });\n          mediaRef.current.src = mediaURL;\n        } catch (e) {\n          // Ignore\n        }\n      })();\n    }, [mediaURL]);\n\n    return (\n      <Parent\n        ref={parentRef}\n        class={`media media-image`}\n        onClick={onClick}\n        data-orientation={orientation}\n        style={\n          showOriginal\n            ? {\n                backgroundImage: `url(${previewUrl})`,\n                backgroundSize: imageSmallerThanParent\n                  ? `${width}px ${height}px`\n                  : undefined,\n              }\n            : mediaStyles\n        }\n      >\n        {showOriginal ? (\n          <QuickPinchZoom {...quickPinchZoomProps}>\n            <img\n              ref={mediaRef}\n              src={mediaURL}\n              alt={description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"eager\"\n              decoding=\"sync\"\n              onLoad={(e) => {\n                e.target.closest('.media-image').style.backgroundImage = '';\n                e.target.closest('.media-zoom').style.display = '';\n                setPinchZoomEnabled(true);\n              }}\n              onError={(e) => {\n                const { src } = e.target;\n                if (src === mediaURL) {\n                  e.target.src = remoteMediaURL;\n                }\n              }}\n            />\n          </QuickPinchZoom>\n        ) : (\n          <img\n            src={mediaURL}\n            alt={description}\n            width={width}\n            height={height}\n            data-orientation={orientation}\n            loading=\"lazy\"\n            style={{\n              backgroundColor:\n                rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n              backgroundPosition: focalBackgroundPosition || 'center',\n              // Duration based on width or height in pixels\n              // 100px per second (rough estimate)\n              // Clamp between 5s and 120s\n              '--anim-duration': `${Math.min(\n                Math.max(Math.max(width, height) / 100, 5),\n                120,\n              )}s`,\n            }}\n            onLoad={(e) => {\n              e.target.closest('.media-image').style.backgroundImage = '';\n              e.target.dataset.loaded = true;\n            }}\n            onError={(e) => {\n              const { src } = e.target;\n              if (src === mediaURL) {\n                e.target.src = remoteMediaURL;\n              }\n            }}\n          />\n        )}\n      </Parent>\n    );\n  } else if (type === 'gifv' || type === 'video') {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n\n    const videoHTML = `\n    <video\n      src=\"${url}\"\n      poster=\"${previewUrl}\"\n      width=\"${width}\"\n      height=\"${height}\"\n      data-orientation=\"${orientation}\"\n      preload=\"auto\"\n      autoplay\n      muted=\"${isGIF}\"\n      ${isGIF ? '' : 'controls'}\n      playsinline\n      loop=\"${loopable}\"\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\n    ></video>\n  `;\n\n    return (\n      <Parent\n        class={`media media-${isGIF ? 'gif' : 'video'} ${\n          autoGIFAnimate ? 'media-contain' : ''\n        }`}\n        data-orientation={orientation}\n        data-formatted-duration={formattedDuration}\n        data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n        // style={{\n        //   backgroundColor:\n        //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n        // }}\n        style={!showOriginal && mediaStyles}\n        onClick={(e) => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.pause();\n            } catch (e) {}\n          }\n          onClick(e);\n        }}\n        onMouseEnter={() => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.play();\n            } catch (e) {}\n          }\n        }}\n        onMouseLeave={() => {\n          if (hoverAnimate) {\n            try {\n              videoRef.current.pause();\n            } catch (e) {}\n          }\n        }}\n      >\n        {showOriginal || autoGIFAnimate ? (\n          isGIF && showOriginal ? (\n            <QuickPinchZoom {...quickPinchZoomProps} enabled>\n              <div\n                ref={mediaRef}\n                dangerouslySetInnerHTML={{\n                  __html: videoHTML,\n                }}\n              />\n            </QuickPinchZoom>\n          ) : (\n            <div\n              class=\"video-container\"\n              dangerouslySetInnerHTML={{\n                __html: videoHTML,\n              }}\n            />\n          )\n        ) : isGIF ? (\n          <video\n            ref={videoRef}\n            src={url}\n            poster={previewUrl}\n            width={width}\n            height={height}\n            data-orientation={orientation}\n            preload=\"auto\"\n            // controls\n            playsinline\n            loop\n            muted\n          />\n        ) : (\n          <>\n            <img\n              src={previewUrl}\n              alt={description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"lazy\"\n            />\n            <div class=\"media-play\">\n              <Icon icon=\"play\" size=\"xl\" />\n            </div>\n          </>\n        )}\n      </Parent>\n    );\n  } else if (type === 'audio') {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <Parent\n        class=\"media media-audio\"\n        data-formatted-duration={formattedDuration}\n        onClick={onClick}\n        style={!showOriginal && mediaStyles}\n      >\n        {showOriginal ? (\n          <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n        ) : previewUrl ? (\n          <img\n            src={previewUrl}\n            alt={description}\n            width={width}\n            height={height}\n            data-orientation={orientation}\n            loading=\"lazy\"\n          />\n        ) : null}\n        {!showOriginal && (\n          <div class=\"media-play\">\n            <Icon icon=\"play\" size=\"xl\" />\n          </div>\n        )}\n      </Parent>\n    );\n  }\n}\n\nexport default Media;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  return (\n    <FocusableItem>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...props}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","import './status.css';\n\nimport '@justinribeiro/lite-youtube';\nimport {\n  ControlledMenu,\n  Menu,\n  MenuDivider,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { decodeBlurHash } from 'fast-blurhash';\nimport mem from 'mem';\nimport pThrottle from 'p-throttle';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useLongPress } from 'use-long-press';\nimport useResizeObserver from 'use-resize-observer';\nimport { useSnapshot } from 'valtio';\nimport { snapshot } from 'valtio/vanilla';\n\nimport AccountBlock from '../components/account-block';\nimport EmojiText from '../components/emoji-text';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport Poll from '../components/poll';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\nimport localeMatch from '../utils/locale-match';\nimport niceDateTime from '../utils/nice-date-time';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport TranslationBlock from './translation-block';\n\nconst INLINE_TRANSLATE_LIMIT = 140;\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 1000,\n});\n\nfunction fetchAccount(id, masto) {\n  try {\n    return masto.v1.accounts.fetch(id);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\nconst memFetchAccount = mem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Private mention',\n};\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  withinContext,\n  size = 'm',\n  skeleton,\n  readOnly,\n  contentTextWeight,\n  enableTranslate,\n  forceTranslate: _forceTranslate,\n  previewMode,\n  allowFilters,\n  onMediaClick,\n  quoted,\n  onStatusLinkClick = () => {},\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">███ ████████</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>████ ████████</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    _filtered,\n  } = status;\n\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  if (allowFilters && size !== 'l' && _filtered) {\n    return (\n      <FilteredStatus\n        status={status}\n        filterInfo={_filtered}\n        instance={instance}\n        containerProps={{\n          onMouseEnter: debugHover,\n        }}\n      />\n    );\n  }\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n  const mentionSelf =\n    inReplyToAccountId === currentAccount ||\n    mentions?.find((mention) => mention.id === currentAccount);\n\n  const showSpoiler = previewMode || !!snapStates.spoilers[id] || false;\n\n  if (reblog) {\n    // If has statusID, means useItemID (cached in states)\n\n    if (group) {\n      return (\n        <div class=\"status-group\" onMouseEnter={debugHover}>\n          <div class=\"status-pre-meta\">\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\n            <NameText account={status.account} instance={instance} showAvatar />\n          </div>\n          <Status\n            status={statusID ? null : reblog}\n            statusID={statusID ? reblog.id : null}\n            instance={instance}\n            size={size}\n            contentTextWeight={contentTextWeight}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"status-reblog\" onMouseEnter={debugHover}>\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          <span>boosted</span>\n        </div>\n        <Status\n          status={statusID ? null : reblog}\n          statusID={statusID ? reblog.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n        />\n      </div>\n    );\n  }\n\n  const isSizeLarge = size === 'l';\n\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const { contentTranslation, contentTranslationAutoInline } =\n    snapStates.settings;\n  if (!contentTranslation) enableTranslate = false;\n  const inlineTranslate = useMemo(() => {\n    if (\n      !contentTranslation ||\n      !contentTranslationAutoInline ||\n      readOnly ||\n      (withinContext && !isSizeLarge) ||\n      previewMode ||\n      spoilerText ||\n      sensitive ||\n      poll ||\n      card ||\n      mediaAttachments?.length\n    ) {\n      return false;\n    }\n    const contentLength = htmlContentLength(content);\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\n  }, [\n    contentTranslation,\n    contentTranslationAutoInline,\n    readOnly,\n    withinContext,\n    isSizeLarge,\n    previewMode,\n    spoilerText,\n    sensitive,\n    poll,\n    card,\n    mediaAttachments,\n    content,\n  ]);\n\n  const [showEdited, setShowEdited] = useState(false);\n  const [showReactions, setShowReactions] = useState(false);\n\n  const spoilerContentRef = useRef(null);\n  useResizeObserver({\n    ref: spoilerContentRef,\n    onResize: () => {\n      if (spoilerContentRef.current) {\n        const { scrollHeight, clientHeight } = spoilerContentRef.current;\n        if (scrollHeight < window.innerHeight * 0.4) {\n          spoilerContentRef.current.classList.remove('truncated');\n        } else {\n          spoilerContentRef.current.classList.toggle(\n            'truncated',\n            scrollHeight > clientHeight,\n          );\n        }\n      }\n    },\n  });\n  const contentRef = useRef(null);\n  useResizeObserver({\n    ref: contentRef,\n    onResize: () => {\n      if (contentRef.current) {\n        const { scrollHeight, clientHeight } = contentRef.current;\n        if (scrollHeight < window.innerHeight * 0.4) {\n          contentRef.current.classList.remove('truncated');\n        } else {\n          contentRef.current.classList.toggle(\n            'truncated',\n            scrollHeight > clientHeight,\n          );\n        }\n      }\n    },\n  });\n  const readMoreText = 'Read more →';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\n\n  const textWeight = useCallback(\n    () =>\n      Math.max(\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\n          1,\n        1,\n      ),\n    [spoilerText, content],\n  );\n\n  const createdDateText = niceDateTime(createdAtDate);\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\n\n  // Can boost if:\n  // - authenticated AND\n  // - visibility != direct OR\n  // - visibility = private AND isSelf\n  let canBoost =\n    authenticated && visibility !== 'direct' && visibility !== 'private';\n  if (visibility === 'private' && isSelf) {\n    canBoost = true;\n  }\n\n  const replyStatus = () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  // Check if media has no descriptions\n  const mediaNoDesc = useMemo(() => {\n    return mediaAttachments.some(\n      (attachment) => !attachment.description?.trim?.(),\n    );\n  }, [mediaAttachments]);\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      if (!reblogged) {\n        let confirmText = 'Boost this post?';\n        if (mediaNoDesc) {\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\n        }\n        const yes = confirm(confirmText);\n        if (!yes) {\n          return false;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.unreblog(id);\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.reblog(id);\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const confirmBoostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.unreblog(id);\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.reblog(id);\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.unfavourite(id);\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.favourite(id);\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.unbookmark(id);\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.bookmark(id);\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const differentLanguage =\n    language &&\n    language !== targetLanguage &&\n    !localeMatch([language], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => language === l || localeMatch([language], [l]),\n    );\n\n  const menuInstanceRef = useRef();\n  const StatusMenuItems = (\n    <>\n      {!isSizeLarge && (\n        <>\n          <MenuHeader>\n            <span class=\"ib\">\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\n              <span>{visibilityText[visibility]}</span>\n            </span>{' '}\n            <span class=\"ib\">\n              {repliesCount > 0 && (\n                <span>\n                  <Icon icon=\"reply\" alt=\"Replies\" size=\"s\" />{' '}\n                  <span>{shortenNumber(repliesCount)}</span>\n                </span>\n              )}{' '}\n              {reblogsCount > 0 && (\n                <span>\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\n                  <span>{shortenNumber(reblogsCount)}</span>\n                </span>\n              )}{' '}\n              {favouritesCount > 0 && (\n                <span>\n                  <Icon icon=\"heart\" alt=\"Favourites\" size=\"s\" />{' '}\n                  <span>{shortenNumber(favouritesCount)}</span>\n                </span>\n              )}\n            </span>\n            <br />\n            {createdDateText}\n          </MenuHeader>\n          <MenuLink\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n            onClick={onStatusLinkClick}\n          >\n            <Icon icon=\"arrow-right\" />\n            <span>View post by @{username || acct}</span>\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <MenuItem\n          onClick={() => {\n            setShowEdited(id);\n          }}\n        >\n          <Icon icon=\"history\" />\n          <span>\n            Show Edit History\n            <br />\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\n          </span>\n        </MenuItem>\n      )}\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\n      {isSizeLarge && (\n        <MenuItem onClick={() => setShowReactions(true)}>\n          <Icon icon=\"react\" />\n          <span>\n            Boosted/Favourited by<span class=\"more-insignificant\">…</span>\n          </span>\n        </MenuItem>\n      )}\n      {!isSizeLarge && sameInstance && (\n        <>\n          <div class=\"menu-horizontal\">\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"rocket\" />\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\n                </>\n              }\n              menuFooter={\n                mediaNoDesc &&\n                !reblogged && (\n                  <div class=\"footer\">\n                    <Icon icon=\"alert\" />\n                    Some media have no descriptions.\n                  </div>\n                )\n              }\n              disabled={!canBoost}\n              onClick={async () => {\n                try {\n                  const done = await confirmBoostStatus();\n                  if (!isSizeLarge && done) {\n                    showToast(reblogged ? 'Unboosted' : 'Boosted');\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"rocket\"\n                style={{\n                  color: reblogged && 'var(--reblog-color)',\n                }}\n              />\n              <span>{reblogged ? 'Unboost' : 'Boost…'}</span>\n            </MenuConfirm>\n            <MenuItem\n              onClick={() => {\n                try {\n                  favouriteStatus();\n                  if (!isSizeLarge)\n                    showToast(favourited ? 'Unfavourited' : 'Favourited');\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"heart\"\n                style={{\n                  color: favourited && 'var(--favourite-color)',\n                }}\n              />\n              <span>{favourited ? 'Unfavourite' : 'Favourite'}</span>\n            </MenuItem>\n          </div>\n          <div class=\"menu-horizontal\">\n            <MenuItem onClick={replyStatus}>\n              <Icon icon=\"reply\" />\n              <span>Reply</span>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                try {\n                  bookmarkStatus();\n                  if (!isSizeLarge)\n                    showToast(bookmarked ? 'Unbookmarked' : 'Bookmarked');\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"bookmark\"\n                style={{\n                  color: bookmarked && 'var(--link-color)',\n                }}\n              />\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n            </MenuItem>\n          </div>\n        </>\n      )}\n      {enableTranslate ? (\n        <MenuItem\n          disabled={forceTranslate}\n          onClick={() => {\n            setForceTranslate(true);\n          }}\n        >\n          <Icon icon=\"translate\" />\n          <span>Translate</span>\n        </MenuItem>\n      ) : (\n        (!language || differentLanguage) && (\n          <MenuLink\n            to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\n          >\n            <Icon icon=\"translate\" />\n            <span>Translate</span>\n          </MenuLink>\n        )\n      )}\n      {((!isSizeLarge && sameInstance) || enableTranslate) && <MenuDivider />}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\n      </MenuItem>\n      <div class=\"menu-horizontal\">\n        <MenuItem\n          onClick={() => {\n            // Copy url to clipboard\n            try {\n              navigator.clipboard.writeText(url);\n              showToast('Link copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy link');\n            }\n          }}\n        >\n          <Icon icon=\"link\" />\n          <span>Copy</span>\n        </MenuItem>\n        {navigator?.share &&\n          navigator?.canShare?.({\n            url,\n          }) && (\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.share({\n                    url,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(\"Sharing doesn't seem to work.\");\n                }\n              }}\n            >\n              <Icon icon=\"share\" />\n              <span>Share…</span>\n            </MenuItem>\n          )}\n      </div>\n      {(isSelf || mentionSelf) && <MenuDivider />}\n      {(isSelf || mentionSelf) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses[\n                muted ? 'unmute' : 'mute'\n              ](id);\n              saveStatus(newStatus, instance);\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\n            } catch (e) {\n              console.error(e);\n              showToast(\n                muted\n                  ? 'Unable to unmute conversation'\n                  : 'Unable to mute conversation',\n              );\n            }\n          }}\n        >\n          {muted ? (\n            <>\n              <Icon icon=\"unmute\" />\n              <span>Unmute conversation</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"mute\" />\n              <span>Mute conversation</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && (\n        <div class=\"menu-horizontal\">\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n          {isSizeLarge && (\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"trash\" />\n                  <span>Delete this post?</span>\n                </>\n              }\n              menuItemClassName=\"danger\"\n              onClick={() => {\n                // const yes = confirm('Delete this post?');\n                // if (yes) {\n                (async () => {\n                  try {\n                    await masto.v1.statuses.remove(id);\n                    const cachedStatus = getStatus(id, instance);\n                    cachedStatus._deleted = true;\n                    showToast('Deleted');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to delete');\n                  }\n                })();\n                // }\n              }}\n            >\n              <Icon icon=\"trash\" />\n              <span>Delete…</span>\n            </MenuConfirm>\n          )}\n        </div>\n      )}\n    </>\n  );\n\n  const contextMenuRef = useRef();\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuAnchorPoint, setContextMenuAnchorPoint] = useState({\n    x: 0,\n    y: 0,\n  });\n  const bindLongPressContext = useLongPress(\n    (e) => {\n      const { clientX, clientY } = e.touches?.[0] || e;\n      // link detection copied from onContextMenu because here it works\n      const link = e.target.closest('a');\n      if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n      e.preventDefault();\n      setContextMenuAnchorPoint({\n        x: clientX,\n        y: clientY,\n      });\n      setIsContextMenuOpen(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 4, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const showContextMenu = size !== 'l' && !previewMode && !_deleted && !quoted;\n\n  return (\n    <article\n      ref={statusRef}\n      tabindex=\"-1\"\n      class={`status ${\n        !withinContext && inReplyToId && inReplyToAccount\n          ? 'status-reply-to'\n          : ''\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n        {\n          s: 'small',\n          m: 'medium',\n          l: 'large',\n        }[size]\n      } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''}`}\n      onMouseEnter={debugHover}\n      onContextMenu={(e) => {\n        // FIXME: this code isn't getting called on Chrome at all?\n        if (!showContextMenu) return;\n        if (e.metaKey) return;\n        // console.log('context menu', e);\n        const link = e.target.closest('a');\n        if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n        e.preventDefault();\n        setContextMenuAnchorPoint({\n          x: e.clientX,\n          y: e.clientY,\n        });\n        setIsContextMenuOpen(true);\n      }}\n      {...(showContextMenu ? bindLongPressContext() : {})}\n    >\n      {showContextMenu && (\n        <ControlledMenu\n          ref={contextMenuRef}\n          state={isContextMenuOpen ? 'open' : undefined}\n          anchorPoint={contextMenuAnchorPoint}\n          direction=\"right\"\n          onClose={(e) => {\n            setIsContextMenuOpen(false);\n            // statusRef.current?.focus?.();\n            if (e?.reason === 'click') {\n              statusRef.current?.closest('[tabindex]')?.focus?.();\n            }\n          }}\n          portal={{\n            target: document.body,\n          }}\n          containerProps={{\n            style: {\n              // Higher than the backdrop\n              zIndex: 1001,\n            },\n            onClick: () => {\n              contextMenuRef.current?.closeMenu?.();\n            },\n          }}\n          overflow=\"auto\"\n          boundingBoxPadding={safeBoundingBoxPadding()}\n          unmountOnClose\n        >\n          {StatusMenuItems}\n        </ControlledMenu>\n      )}\n      {size !== 'l' && (\n        <div class=\"status-badge\">\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n        </div>\n      )}\n      {size !== 's' && (\n        <a\n          href={accountURL}\n          tabindex=\"-1\"\n          // target=\"_blank\"\n          title={`@${acct}`}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            states.showAccount = {\n              account: status.account,\n              instance,\n            };\n          }}\n        >\n          <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\n        </a>\n      )}\n      <div class=\"container\">\n        <div class=\"meta\">\n          {/* <span> */}\n          <NameText\n            account={status.account}\n            instance={instance}\n            showAvatar={size === 's'}\n            showAcct={isSizeLarge}\n          />\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n          {/* </span> */}{' '}\n          {size !== 'l' &&\n            (_deleted ? (\n              <span class=\"status-deleted-tag\">Deleted</span>\n            ) : url && !previewMode && !quoted ? (\n              <Menu\n                instanceRef={menuInstanceRef}\n                portal={{\n                  target: document.body,\n                }}\n                containerProps={{\n                  style: {\n                    // Higher than the backdrop\n                    zIndex: 1001,\n                  },\n                  onClick: (e) => {\n                    if (e.target === e.currentTarget)\n                      menuInstanceRef.current?.closeMenu?.();\n                  },\n                }}\n                align=\"end\"\n                gap={4}\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                boundingBoxPadding=\"8 8 8 8\"\n                unmountOnClose\n                menuButton={({ open }) => (\n                  <Link\n                    to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onStatusLinkClick?.();\n                    }}\n                    class={`time ${open ? 'is-open' : ''}`}\n                  >\n                    <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                      size=\"s\"\n                    />{' '}\n                    <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                  </Link>\n                )}\n              >\n                {StatusMenuItems}\n              </Menu>\n            ) : (\n              <span class=\"time\">\n                <Icon\n                  icon={visibilityIconsMap[visibility]}\n                  alt={visibilityText[visibility]}\n                  size=\"s\"\n                />{' '}\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\n              </span>\n            ))}\n        </div>\n        {visibility === 'direct' && (\n          <>\n            <div class=\"status-direct-badge\">Private mention</div>{' '}\n          </>\n        )}\n        {!withinContext && (\n          <>\n            {(!!inReplyToId && inReplyToAccountId === status.account?.id) ||\n            !!snapStates.statusThreadNumber[sKey] ? (\n              <div class=\"status-thread-badge\">\n                <Icon icon=\"thread\" size=\"s\" />\n                Thread\n                {snapStates.statusThreadNumber[sKey]\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                  : ''}\n              </div>\n            ) : (\n              !!inReplyToId &&\n              !!inReplyToAccount &&\n              (!!spoilerText ||\n                !mentions.find((mention) => {\n                  return mention.id === inReplyToAccountId;\n                })) && (\n                <div class=\"status-reply-badge\">\n                  <Icon icon=\"reply\" />{' '}\n                  <NameText\n                    account={inReplyToAccount}\n                    instance={instance}\n                    short\n                  />\n                </div>\n              )\n            )}\n          </>\n        )}\n        <div\n          class={`content-container ${\n            spoilerText || sensitive ? 'has-spoiler' : ''\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\n          style={\n            (isSizeLarge || contentTextWeight) && {\n              '--content-text-weight': textWeight(),\n            }\n          }\n        >\n          {!!spoilerText && (\n            <>\n              <div\n                class=\"content spoiler-content\"\n                lang={language}\n                dir=\"auto\"\n                ref={spoilerContentRef}\n                data-read-more={readMoreText}\n              >\n                <p>\n                  <EmojiText text={spoilerText} emojis={emojis} />\n                </p>\n              </div>\n              <button\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (showSpoiler) {\n                    delete states.spoilers[id];\n                  } else {\n                    states.spoilers[id] = true;\n                  }\n                }}\n              >\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                {showSpoiler ? 'Show less' : 'Show more'}\n              </button>\n            </>\n          )}\n          <div class=\"content\" ref={contentRef} data-read-more={readMoreText}>\n            <div\n              lang={language}\n              dir=\"auto\"\n              class=\"inner-content\"\n              onClick={handleContentLinks({ mentions, instance, previewMode })}\n              dangerouslySetInnerHTML={{\n                __html: enhanceContent(content, {\n                  emojis,\n                  postEnhanceDOM: (dom) => {\n                    // Remove target=\"_blank\" from links\n                    dom\n                      .querySelectorAll('a.u-url[target=\"_blank\"]')\n                      .forEach((a) => {\n                        if (!/http/i.test(a.innerText.trim())) {\n                          a.removeAttribute('target');\n                        }\n                      });\n                    if (previewMode) return;\n                    // Unfurl Mastodon links\n                    Array.from(\n                      dom.querySelectorAll(\n                        'a[href]:not(.u-url):not(.mention):not(.hashtag)',\n                      ),\n                    )\n                      .filter((a) => {\n                        const url = a.href;\n                        const isPostItself =\n                          url === status.url || url === status.uri;\n                        return !isPostItself && isMastodonLinkMaybe(url);\n                      })\n                      .forEach((a, i) => {\n                        unfurlMastodonLink(currentInstance, a.href).then(\n                          (result) => {\n                            if (!result) return;\n                            a.removeAttribute('target');\n                            if (!sKey) return;\n                            if (!Array.isArray(states.statusQuotes[sKey])) {\n                              states.statusQuotes[sKey] = [];\n                            }\n                            if (!states.statusQuotes[sKey][i]) {\n                              states.statusQuotes[sKey].splice(i, 0, result);\n                            }\n                          },\n                        );\n                      });\n                  },\n                }),\n              }}\n            />\n            <QuoteStatuses id={id} instance={instance} level={quoted} />\n          </div>\n          {!!poll && (\n            <Poll\n              lang={language}\n              poll={poll}\n              readOnly={readOnly || !sameInstance || !authenticated}\n              onUpdate={(newPoll) => {\n                states.statuses[sKey].poll = newPoll;\n              }}\n              refresh={() => {\n                return masto.v1.polls\n                  .fetch(poll.id)\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n              votePoll={(choices) => {\n                return masto.v1.polls\n                  .vote(poll.id, {\n                    choices,\n                  })\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n            />\n          )}\n          {(((enableTranslate || inlineTranslate) &&\n            !!content.trim() &&\n            differentLanguage) ||\n            forceTranslate) && (\n            <TranslationBlock\n              forceTranslate={forceTranslate || inlineTranslate}\n              mini={!isSizeLarge && !withinContext}\n              sourceLanguage={language}\n              text={\n                (spoilerText ? `${spoilerText}\\n\\n` : '') +\n                getHTMLText(content) +\n                (poll?.options?.length\n                  ? `\\n\\nPoll:\\n${poll.options\n                      .map(\n                        (option) =>\n                          `- ${option.title}${\n                            option.votesCount >= 0\n                              ? ` (${option.votesCount})`\n                              : ''\n                          }`,\n                      )\n                      .join('\\n')}`\n                  : '')\n              }\n            />\n          )}\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\n            <button\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                if (showSpoiler) {\n                  delete states.spoilers[id];\n                } else {\n                  states.spoilers[id] = true;\n                }\n              }}\n            >\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\n              content\n            </button>\n          )}\n          {!!mediaAttachments.length && (\n            <div\n              class={`media-container media-eq${mediaAttachments.length} ${\n                mediaAttachments.length > 2 ? 'media-gt2' : ''\n              } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n            >\n              {mediaAttachments\n                .slice(0, isSizeLarge ? undefined : 4)\n                .map((media, i) => (\n                  <Media\n                    key={media.id}\n                    media={media}\n                    autoAnimate={isSizeLarge}\n                    to={`/${instance}/s/${id}?${\n                      withinContext ? 'media' : 'media-only'\n                    }=${i + 1}`}\n                    onClick={\n                      onMediaClick\n                        ? (e) => {\n                            onMediaClick(e, i, media, status);\n                          }\n                        : undefined\n                    }\n                  />\n                ))}\n            </div>\n          )}\n          {!!card &&\n            card?.url !== status.url &&\n            card?.url !== status.uri &&\n            /^https/i.test(card?.url) &&\n            !sensitive &&\n            !spoilerText &&\n            !poll &&\n            !mediaAttachments.length &&\n            !snapStates.statusQuotes[sKey] && (\n              <Card card={card} instance={currentInstance} />\n            )}\n        </div>\n        {isSizeLarge && (\n          <>\n            <div class=\"extra-meta\">\n              {_deleted ? (\n                <span class=\"status-deleted-tag\">Deleted</span>\n              ) : (\n                <>\n                  <Icon\n                    icon={visibilityIconsMap[visibility]}\n                    alt={visibilityText[visibility]}\n                  />{' '}\n                  <a href={url} target=\"_blank\">\n                    <time\n                      class=\"created\"\n                      datetime={createdAtDate.toISOString()}\n                    >\n                      {createdDateText}\n                    </time>\n                  </a>\n                  {editedAt && (\n                    <>\n                      {' '}\n                      &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                      <time\n                        class=\"edited\"\n                        datetime={editedAtDate.toISOString()}\n                        onClick={() => {\n                          setShowEdited(id);\n                        }}\n                      >\n                        {editedDateText}\n                      </time>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n            <div class={`actions ${_deleted ? 'disabled' : ''}`}>\n              <div class=\"action has-count\">\n                <StatusButton\n                  title=\"Reply\"\n                  alt=\"Comments\"\n                  class=\"reply-button\"\n                  icon=\"comment\"\n                  count={repliesCount}\n                  onClick={replyStatus}\n                />\n              </div>\n              {/* <div class=\"action has-count\">\n                <StatusButton\n                  checked={reblogged}\n                  title={['Boost', 'Unboost']}\n                  alt={['Boost', 'Boosted']}\n                  class=\"reblog-button\"\n                  icon=\"rocket\"\n                  count={reblogsCount}\n                  onClick={boostStatus}\n                  disabled={!canBoost}\n                />\n              </div> */}\n              <MenuConfirm\n                disabled={!canBoost}\n                onClick={confirmBoostStatus}\n                confirmLabel={\n                  <>\n                    <Icon icon=\"rocket\" />\n                    <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\n                  </>\n                }\n                menuFooter={\n                  mediaNoDesc &&\n                  !reblogged && (\n                    <div class=\"footer\">\n                      <Icon icon=\"alert\" />\n                      Some media have no descriptions.\n                    </div>\n                  )\n                }\n              >\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={reblogged}\n                    title={['Boost', 'Unboost']}\n                    alt={['Boost', 'Boosted']}\n                    class=\"reblog-button\"\n                    icon=\"rocket\"\n                    count={reblogsCount}\n                    // onClick={boostStatus}\n                    disabled={!canBoost}\n                  />\n                </div>\n              </MenuConfirm>\n              <div class=\"action has-count\">\n                <StatusButton\n                  checked={favourited}\n                  title={['Favourite', 'Unfavourite']}\n                  alt={['Favourite', 'Favourited']}\n                  class=\"favourite-button\"\n                  icon=\"heart\"\n                  count={favouritesCount}\n                  onClick={favouriteStatus}\n                />\n              </div>\n              <div class=\"action\">\n                <StatusButton\n                  checked={bookmarked}\n                  title={['Bookmark', 'Unbookmark']}\n                  alt={['Bookmark', 'Bookmarked']}\n                  class=\"bookmark-button\"\n                  icon=\"bookmark\"\n                  onClick={bookmarkStatus}\n                />\n              </div>\n              <Menu\n                portal={{\n                  target:\n                    document.querySelector('.status-deck') || document.body,\n                }}\n                align=\"end\"\n                gap={4}\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                boundingBoxPadding=\"8 8 8 8\"\n                menuButton={\n                  <div class=\"action\">\n                    <button\n                      type=\"button\"\n                      title=\"More\"\n                      class=\"plain more-button\"\n                    >\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                    </button>\n                  </div>\n                }\n              >\n                {StatusMenuItems}\n              </Menu>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showEdited && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }\n          }}\n        >\n          <EditedAtModal\n            statusID={showEdited}\n            instance={instance}\n            fetchStatusHistory={() => {\n              return masto.v1.statuses.listHistory(showEdited);\n            }}\n            onClose={() => {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }}\n          />\n        </Modal>\n      )}\n      {showReactions && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowReactions(false);\n            }\n          }}\n        >\n          <ReactionsModal\n            statusID={id}\n            instance={instance}\n            onClose={() => setShowReactions(false)}\n          />\n        </Modal>\n      )}\n    </article>\n  );\n}\n\nfunction Card({ card, instance }) {\n  const snapStates = useSnapshot(states);\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    authorName,\n    width,\n    height,\n    image,\n    url,\n    type,\n    embedUrl,\n    language,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.fetch(id);\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (snapStates.unfurledLinks[url]) return null;\n\n  if (hasText && (image || (type === 'photo' && blurhash))) {\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\n    let blurhashImage;\n    if (!image) {\n      const w = 44;\n      const h = 44;\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\n      const canvas = document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(w, h);\n      imageData.data.set(blurhashPixels);\n      ctx.putImageData(imageData, 0, 0);\n      blurhashImage = canvas.toDataURL();\n    }\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${blurhashImage ? '' : size}`}\n        lang={language}\n      >\n        <div class=\"card-image\">\n          <img\n            src={image || blurhashImage}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt=\"\"\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">{domain}</p>\n          <p class=\"title\">{title}</p>\n          <p class=\"meta\">{description || providerName || authorName}</p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else if (type === 'video') {\n    if (/youtube/i.test(providerName)) {\n      // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\n      const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\n      if (videoID) {\n        return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\n      }\n    }\n    return (\n      <div\n        class=\"card video\"\n        style={{\n          aspectRatio: `${width}/${height}`,\n        }}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    );\n  } else if (hasText && !image) {\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link no-image`}\n        lang={language}\n      >\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">\n            <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\n          </p>\n          <p class=\"title\">{title}</p>\n          <p class=\"meta\">{description || providerName || authorName}</p>\n        </div>\n      </a>\n    );\n  }\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {niceDateTime(createdAtDate, {\n                        formatOpts: {\n                          weekday: 'short',\n                          second: 'numeric',\n                        },\n                      })}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                    previewMode\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nconst REACTIONS_LIMIT = 80;\nfunction ReactionsModal({ statusID, instance, onClose }) {\n  const { masto } = api({ instance });\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  const reblogIterator = useRef();\n  const favouriteIterator = useRef();\n\n  async function fetchAccounts(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad) {\n          reblogIterator.current = masto.v1.statuses.listRebloggedBy(statusID, {\n            limit: REACTIONS_LIMIT,\n          });\n          favouriteIterator.current = masto.v1.statuses.listFavouritedBy(\n            statusID,\n            {\n              limit: REACTIONS_LIMIT,\n            },\n          );\n        }\n        const [{ value: reblogResults }, { value: favouriteResults }] =\n          await Promise.allSettled([\n            reblogIterator.current.next(),\n            favouriteIterator.current.next(),\n          ]);\n        if (reblogResults.value?.length || favouriteResults.value?.length) {\n          if (reblogResults.value?.length) {\n            for (const account of reblogResults.value) {\n              const theAccount = accounts.find((a) => a.id === account.id);\n              if (!theAccount) {\n                accounts.push({\n                  ...account,\n                  _types: ['reblog'],\n                });\n              } else {\n                theAccount._types.push('reblog');\n              }\n            }\n          }\n          if (favouriteResults.value?.length) {\n            for (const account of favouriteResults.value) {\n              const theAccount = accounts.find((a) => a.id === account.id);\n              if (!theAccount) {\n                accounts.push({\n                  ...account,\n                  _types: ['favourite'],\n                });\n              } else {\n                theAccount._types.push('favourite');\n              }\n            }\n          }\n          setAccounts(accounts);\n          setShowMore(!reblogResults.done || !favouriteResults.done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchAccounts(true);\n  }, []);\n\n  return (\n    <div id=\"reactions-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Boosted/Favourited by…</h2>\n      </header>\n      <main>\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"reactions-list\">\n              {accounts.map((account) => {\n                const { _types } = account;\n                return (\n                  <li key={account.id + _types}>\n                    <div class=\"reactions-block\">\n                      {_types.map((type) => (\n                        <Icon\n                          icon={\n                            {\n                              reblog: 'rocket',\n                              favourite: 'heart',\n                            }[type]\n                          }\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                    <AccountBlock account={account} instance={instance} />\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      fetchAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => fetchAccounts()}\n                  >\n                    Show more&hellip;\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">The end.</p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">Unable to load accounts</p>\n        ) : (\n          <p class=\"ui-state insignificant\">No one yet.</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  icon,\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\n      onClick={(e) => {\n        if (!onClick) return;\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nexport function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n\nconst denylistDomains = /(twitter|github)\\.com/i;\nconst failedUnfurls = {};\n\nfunction _unfurlMastodonLink(instance, url) {\n  const snapStates = snapshot(states);\n  if (denylistDomains.test(url)) {\n    return;\n  }\n  if (failedUnfurls[url]) {\n    return;\n  }\n  const instanceRegex = new RegExp(instance + '/');\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\n    return Promise.resolve(snapStates.unfurledLinks[url]);\n  }\n  console.debug('🦦 Unfurling URL', url);\n\n  let remoteInstanceFetch;\n  let theURL = url;\n  if (/\\/\\/elk\\.[^\\/]+\\/[^.]+\\.[^.]+/i.test(theURL)) {\n    // E.g. https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\n  }\n  const urlObj = new URL(theURL);\n  const domain = urlObj.hostname;\n  const path = urlObj.pathname;\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\n  const statusMatch = statusRegex.exec(path);\n  if (statusMatch) {\n    const id = statusMatch[3];\n    const { masto } = api({ instance: domain });\n    remoteInstanceFetch = masto.v1.statuses.fetch(id).then((status) => {\n      if (status?.id) {\n        return {\n          status,\n          instance: domain,\n        };\n      } else {\n        throw new Error('No results');\n      }\n    });\n  }\n\n  const { masto } = api({ instance });\n  const mastoSearchFetch = masto.v2\n    .search({\n      q: url,\n      type: 'statuses',\n      resolve: true,\n      limit: 1,\n    })\n    .then((results) => {\n      if (results.statuses.length > 0) {\n        const status = results.statuses[0];\n        return {\n          status,\n          instance,\n        };\n      } else {\n        throw new Error('No results');\n      }\n    });\n\n  function handleFulfill(result) {\n    const { status, instance } = result;\n    const { id } = status;\n    const selfURL = `/${instance}/s/${id}`;\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\n    const data = {\n      id,\n      instance,\n      url: selfURL,\n    };\n    states.unfurledLinks[url] = data;\n    saveStatus(status, instance, {\n      skipThreading: true,\n    });\n    return data;\n  }\n  function handleCatch(e) {\n    failedUnfurls[url] = true;\n  }\n\n  if (remoteInstanceFetch) {\n    return Promise.any([remoteInstanceFetch, mastoSearchFetch])\n      .then(handleFulfill)\n      .catch(handleCatch);\n  } else {\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\n  }\n}\n\nfunction nicePostURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '');\n  // split only first slash\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\n  return (\n    <>\n      {host}\n      {username ? (\n        <>\n          /{username}\n          <wbr />\n          <span class=\"more-insignificant\">/{restPath}</span>\n        </>\n      ) : (\n        <span class=\"more-insignificant\">{path}</span>\n      )}\n    </>\n  );\n}\n\nconst unfurlMastodonLink = throttle(\n  mem(_unfurlMastodonLink, {\n    cacheKey: (instance, url) => `${instance}:${url}`,\n  }),\n);\n\nfunction FilteredStatus({ status, filterInfo, instance, containerProps = {} }) {\n  const {\n    account: { avatar, avatarStatic, bot, group },\n    createdAt,\n    visibility,\n    reblog,\n  } = status;\n  const isReblog = !!reblog;\n  const filterTitleStr = filterInfo?.titlesStr || '';\n  const createdAtDate = new Date(createdAt);\n  const statusPeekText = statusPeek(status.reblog || status);\n\n  const [showPeek, setShowPeek] = useState(false);\n  const bindLongPressPeek = useLongPress(\n    () => {\n      setShowPeek(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 4, // true allows movement of up to 25 pixels\n    },\n  );\n\n  return (\n    <div\n      class={isReblog ? (group ? 'status-group' : 'status-reblog') : ''}\n      {...containerProps}\n      title={statusPeekText}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setShowPeek(true);\n      }}\n      {...bindLongPressPeek()}\n    >\n      <article class=\"status filtered\" tabindex=\"-1\">\n        <b\n          class=\"status-filtered-badge clickable badge-meta\"\n          title={filterTitleStr}\n          onClick={(e) => {\n            e.preventDefault();\n            setShowPeek(true);\n          }}\n        >\n          <span>Filtered</span>\n          <span>{filterTitleStr}</span>\n        </b>{' '}\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\n        <span class=\"status-filtered-info\">\n          <span class=\"status-filtered-info-1\">\n            <NameText account={status.account} instance={instance} />{' '}\n            <Icon\n              icon={visibilityIconsMap[visibility]}\n              alt={visibilityText[visibility]}\n              size=\"s\"\n            />{' '}\n            {isReblog ? (\n              'boosted'\n            ) : (\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\n            )}\n          </span>\n          <span class=\"status-filtered-info-2\">\n            {isReblog && (\n              <>\n                <Avatar\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\n                  squircle={bot}\n                />{' '}\n              </>\n            )}\n            {statusPeekText}\n          </span>\n        </span>\n      </article>\n      {!!showPeek && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowPeek(false);\n            }\n          }}\n        >\n          <div id=\"filtered-status-peek\" class=\"sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowPeek(false)}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\n            </header>\n            <main tabIndex=\"-1\">\n              <Link\n                class=\"status-link\"\n                to={`/${instance}/s/${status.id}`}\n                onClick={() => {\n                  setShowPeek(false);\n                }}\n              >\n                <Status status={status} instance={instance} size=\"s\" readOnly />\n                <button type=\"button\" class=\"status-post-link plain3\">\n                  See post &raquo;\n                </button>\n              </Link>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\n  if (!id || !instance) return;\n  const snapStates = useSnapshot(states);\n  const sKey = statusKey(id, instance);\n  const quotes = snapStates.statusQuotes[sKey];\n  const uniqueQuotes = quotes?.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n\n  if (!uniqueQuotes?.length) return;\n  if (level > 2) return;\n\n  return uniqueQuotes.map((q) => {\n    return (\n      <Link\n        key={q.instance + q.id}\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\n        class=\"status-card-link\"\n      >\n        <Status\n          statusID={q.id}\n          instance={q.instance}\n          size=\"s\"\n          quoted={level + 1}\n        />\n      </Link>\n    );\n  });\n});\n\nexport default memo(Status);\n","import './compose.css';\n\nimport '@github/text-expander-element';\nimport equal from 'fast-deep-equal';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport localeMatch from '../utils/locale-match';\nimport openCompose from '../utils/open-compose';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const { configuration } = getCurrentInstance();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: { maxCharacters, maxMediaAttachments, charactersReservedPerUrl },\n    mediaAttachments: {\n      supportedMimeTypes,\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    },\n    polls: { maxOptions, maxCharactersPerOption, maxExpiration, minExpiration },\n  } = configuration;\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility']\n          : visibility,\n      );\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses.fetchSource(\n            editStatus.id,\n          );\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility']);\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language']);\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!value && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enableOnFormTags: true,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n    },\n  );\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n            />\n          )}\n          {!standalone ? (\n            <span>\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                    },\n                  });\n\n                  if (!newWin) {\n                    alert('Looks like your browser is blocking popups.');\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt=\"Pop out\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert('Looks like you closed the parent window.');\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    const yes = confirm(\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\n                    );\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      window.opener.__STATES__.showCompose = true;\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt=\"Pop in\" />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              Replying to @\n              {replyToStatus.account.acct || replyToStatus.account.username}\n              &rsquo;s post\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">Editing source post</div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText } = entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert('Poll must have at least 2 options');\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert('Some poll choices are empty');\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  'Some media have no descriptions. Continue?',\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.mediaAttachments\n                        .create(params)\n                        .then((res) => {\n                          if (res.id) {\n                            attachment.id = res.id;\n                          }\n                          return res;\n                        });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || `Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses.update(\n                    editStatus.id,\n                    params,\n                  );\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      idempotencyKey: UID.current,\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                setUIState('default');\n\n                // Close\n                onClose({\n                  newStatus,\n                  instance,\n                });\n              } catch (e) {\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder=\"Content warning\"\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title=\"Content warning or sensitive media\"\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={`Visibility: ${visibility}`}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n              >\n                <option value=\"public\">\n                  Public <Icon icon=\"earth\" />\n                </option>\n                <option value=\"unlisted\">Unlisted</option>\n                <option value=\"private\">Followers only</option>\n                <option value=\"direct\">Private mention</option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? 'Post your reply'\n                : editStatus\n                ? 'Edit your post'\n                : 'What are you doing?'\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              return masto.v2.search(params);\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i].description = value;\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>Mark media as sensitive</span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          <div\n            class=\"toolbar wrap\"\n            style={{\n              justifyContent: 'flex-end',\n            }}\n          >\n            <span>\n              <label class=\"toolbar-button\">\n                <input\n                  type=\"file\"\n                  accept={supportedMimeTypes.join(',')}\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onChange={(e) => {\n                    const files = e.target.files;\n                    if (!files) return;\n\n                    const mediaFiles = Array.from(files).map((file) => ({\n                      file,\n                      type: file.type,\n                      size: file.size,\n                      url: URL.createObjectURL(file),\n                      id: null, // indicate uploaded state\n                      description: null,\n                    }));\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                    // Validate max media attachments\n                    if (\n                      mediaAttachments.length + mediaFiles.length >\n                      maxMediaAttachments\n                    ) {\n                      alert(\n                        `You can only attach up to ${maxMediaAttachments} files.`,\n                      );\n                    } else {\n                      setMediaAttachments((attachments) => {\n                        return attachments.concat(mediaFiles);\n                      });\n                    }\n                    // Reset\n                    e.target.value = '';\n                  }}\n                />\n                <Icon icon=\"attachment\" />\n              </label>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\n                }\n                onClick={() => {\n                  setPoll({\n                    options: ['', ''],\n                    expiresIn: 24 * 60 * 60, // 1 day\n                    multiple: false,\n                  });\n                }}\n              >\n                <Icon icon=\"poll\" alt=\"Add poll\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowEmoji2Picker(true);\n                }}\n              >\n                <Icon icon=\"emoji2\" />\n              </button>\n            </span>\n            <div class=\"spacer\" />\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ? 'highlight' : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                {supportedLanguages\n                  .sort(([codeA, commonA], [codeB, commonB]) => {\n                    const { contentTranslationHideLanguages = [] } =\n                      states.settings;\n                    // Sort codes that same as language, prevLanguage, DEFAULT_LANGUAGE and all the ones in states.settings.contentTranslationHideLanguages, to the top\n                    if (\n                      codeA === language ||\n                      codeA === prevLanguage ||\n                      codeA === DEFAULT_LANG ||\n                      contentTranslationHideLanguages?.includes(codeA)\n                    )\n                      return -1;\n                    if (\n                      codeB === language ||\n                      codeB === prevLanguage ||\n                      codeB === DEFAULT_LANG ||\n                      contentTranslationHideLanguages?.includes(codeB)\n                    )\n                      return 1;\n                    return commonA.localeCompare(commonB);\n                  })\n                  .map(([code, common, native]) => (\n                    <option value={code}>\n                      {common} ({native})\n                    </option>\n                  ))}\n              </select>\n            </label>{' '}\n            <button\n              type=\"submit\"\n              class=\"large\"\n              disabled={uiState === 'loading'}\n            >\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showEmoji2Picker && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEmoji2Picker(false);\n            }\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            onSelect={(emoji) => {\n              const emojiWithSpace = ` ${emoji} `;\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const newText =\n                text.slice(0, selectionStart) +\n                emojiWithSpace +\n                text.slice(selectionEnd);\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiWithSpace.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n\n  const customEmojis = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        console.log({ emojis });\n        customEmojis.current = emojis;\n      } catch (e) {\n        // silent fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          const emojis = filterShortcodes(customEmojis.current, text);\n          let html = '';\n          emojis.forEach((emoji) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                :${encodeHTML(shortcode)}:\n              </li>`;\n          });\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: emojis.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type];\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span>#<b>${encodeHTML(name)}</b></span>\n                    </li>\n                  `;\n                }\n                menu.innerHTML = html;\n              });\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        if (key === ':') {\n          e.detail.value = `:${item.dataset.value}:`;\n        } else {\n          e.detail.value = `${key}${item.dataset.value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  return (\n    <text-expander ref={textExpanderRef} keys=\"@ # :\">\n      <textarea\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onInput={(e) => {\n          const { scrollHeight, offsetHeight, clientHeight, value } = e.target;\n          setText(value);\n          const offset = offsetHeight - clientHeight;\n          e.target.style.height = value ? scrollHeight + offset + 'px' : null;\n          props.onInput?.(e);\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <meter class=\"donut\" hidden />;\n  }\n  return (\n    <meter\n      class={`donut ${\n        leftChars <= -10\n          ? 'explode'\n          : leftChars <= 0\n          ? 'danger'\n          : leftChars <= 20\n          ? 'warning'\n          : ''\n      }`}\n      value={charCount}\n      max={maxCharacters}\n      data-left={leftChars}\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    />\n  );\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { url, type, id } = attachment;\n  console.log({ attachment });\n  const [description, setDescription] = useState(attachment.description);\n  const suffixType = type.split('/')[0];\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img src={url} alt=\"\" />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video src={url} playsinline muted />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowModal(false);\n            }\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              {descTextarea}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState({});\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        // Group emojis by category\n        const emojisCat = {\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n            emojis.find((e) => e.shortcode === emoji.shortcode),\n          ),\n        };\n        const othersCat = [];\n        emojis.forEach((emoji) => {\n          if (!emoji.visibleInPicker) return;\n          customEmojisList.current?.push?.(emoji);\n          if (!emoji.category) {\n            othersCat.push(emoji);\n            return;\n          }\n          if (!emojisCat[emoji.category]) {\n            emojisCat[emoji.category] = [];\n          }\n          emojisCat[emoji.category].push(emoji);\n        });\n        if (othersCat.length) {\n          emojisCat['--others--'] = othersCat;\n        }\n        setCustomEmojis(emojisCat);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <b>Custom emojis</b>{' '}\n        {uiState === 'loading' ? (\n          <Loader />\n        ) : (\n          <small class=\"insignificant\"> • {instance}</small>\n        )}\n      </header>\n      <main>\n        <div class=\"custom-emojis-list\">\n          {uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>Error loading custom emojis</p>\n            </div>\n          )}\n          {uiState === 'default' &&\n            Object.entries(customEmojis).map(\n              ([category, emojis]) =>\n                !!emojis?.length && (\n                  <>\n                    <div class=\"section-header\">\n                      {{\n                        '--recent--': 'Recently used',\n                        '--others--': 'Others',\n                      }[category] || category}\n                    </div>\n                    <section>\n                      {emojis.map((emoji) => (\n                        <button\n                          key={emoji}\n                          type=\"button\"\n                          class=\"plain4\"\n                          onClick={() => {\n                            onClose();\n                            requestAnimationFrame(() => {\n                              onSelect(`:${emoji.shortcode}:`);\n                            });\n                            let recentlyUsedCustomEmojis =\n                              store.account.get('recentlyUsedCustomEmojis') ||\n                              [];\n                            const recentlyUsedEmojiIndex =\n                              recentlyUsedCustomEmojis.findIndex(\n                                (e) => e.shortcode === emoji.shortcode,\n                              );\n                            if (recentlyUsedEmojiIndex !== -1) {\n                              // Move emoji to index 0\n                              recentlyUsedCustomEmojis.splice(\n                                recentlyUsedEmojiIndex,\n                                1,\n                              );\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                            } else {\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                              // Remove unavailable ones\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.filter((e) =>\n                                  customEmojisList.current?.find?.(\n                                    (emoji) => emoji.shortcode === e.shortcode,\n                                  ),\n                                );\n                              // Limit to 10\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.slice(0, 10);\n                            }\n\n                            // Store back\n                            store.account.set(\n                              'recentlyUsedCustomEmojis',\n                              recentlyUsedCustomEmojis,\n                            );\n                          }}\n                          title={`:${emoji.shortcode}:`}\n                        >\n                          <img\n                            src={emoji.url || emoji.staticUrl}\n                            alt={emoji.shortcode}\n                            width=\"16\"\n                            height=\"16\"\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                          />\n                        </button>\n                      ))}\n                    </section>\n                  </>\n                ),\n            )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n","import { useLayoutEffect } from 'preact/hooks';\nimport { matchPath } from 'react-router-dom';\nimport { subscribeKey } from 'valtio/utils';\n\nimport states from './states';\n\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\n\nexport default function useTitle(title, path) {\n  function setTitle() {\n    const { currentLocation } = states;\n    const hasPaths = Array.isArray(path);\n    let paths = hasPaths ? path : [];\n    // Workaround for matchPath not working for optional path segments\n    // https://github.com/remix-run/react-router/discussions/9862\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\n    }\n    let matched = false;\n    if (paths.length) {\n      matched = paths.some((p) => matchPath(p, currentLocation));\n    } else if (path) {\n      matched = matchPath(path, currentLocation);\n    }\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\n    if (matched) {\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\n    }\n  }\n\n  useLayoutEffect(() => {\n    setTitle();\n    return subscribeKey(states, 'currentLocation', setTitle);\n  }, [title, path]);\n}\n"],"file":"assets/useTitle-644aa295.js"}